Changes for vile 9.3 (released ??? ??? ?? 2000)

 20011225 (s)
	> Tom Dickey:
	+ fix a memory leak in vars_complete(), as well as make it faster by
	  caching the sorted list of temporary variables until one is added or
	  removed.
	+ modify modeline display to show local recordseparator values (cr, lf,
	  crlf) rather than dos mode, since the latter is redundant in that
	  context.
	+ implemented support for reading/writing Macintosh files, i.e.,
	  recordseparator=cr.  New commands set-rs-cr, set-rs-lf, set-rs-crlf
	  extend the set-unix-mode and set-dos-mode commands to include Mac's.
	+ indent'd fileio.c, mktbls.c, tbuff.c
	+ modify ntconio.c so that default fcolor is 7 (request by Walter
	  Kennedy <wkennedy@softintegration.com>).
	+ modify ntconio.c so that "reverse" color scheme works.
	+ add $prompt variable, to allow changing the command-line prompt.
	+ fix an infinite loop in sh-filt.c (reported by Paul Fox).
	+ add a configure check for mkdtemp().
	+ regenerate configure script, overlooked in 9.2r after resyncing
	  macros in aclocal.m4

 20011216 (r)
	> Paul Fox:
	+ fix a problem where repeated ":!cmd" invocations (with no intervening
	  carriage return) cause the "Press return..." message to be
	  suppressed.  (The problem is that mlforce suppresses its output if
	  sgarbf is set.  The first shell invocation sets sgarbf, so the prompt
	  after the second shell command never comes out.)
	> Tom Dickey:
	+ change warning level in makefile.wnt to -W4
	+ modify ntconio.c to use the original attributes when erasing the last
	  line of the screen when closing the console.  This works around a bug
	  in w95/.../win-me that would leave vile's color settings in effect
	  after vile exited (reported by Walter Kennedy
	  <wkennedy@softintegration.com>).
	+ modify pl-filt.c to handle pattern immediately after "if" keyword,
	  e.g.,
		if /SHLIB_VERSION_NUMBER *"([^"]+)"/; # "
	+ modify sh-filt.l to handle quotes in substitutions, e.g.,
		ACLOCAL=${ACLOCAL-"${am_missing_run}aclocal"}
	+ update config.guess and config.sub from
		http://subversions.gnu.org/cgi-bin/viewcvs/config/config/
	+ regenerate configure script with autoconf 2.52, patched with
		autoconf-2.52-20011201.patch.gz
	  at
		ftp://invisible-island.net/autoconf/
	+ check for $ac_top_srcdir in configure.in, to work with autoconf 2.5x,
	  which renamed this variable from $top_srcdir in 2.13.
	+ modify CF_PROG_PERL to work with autoconf 2.5x, which does not permit
	  unbalanced brackets, using a sed expression to obtain the "$]" token.
	+ modify configure.in to avoid using changequote(), which is broken
	  in autoconf 2.5x
	+ updated install.sh from tin.
	+ updated some configure script macros from changes for tin/lynx: 
	  CF_HEADER_PATH, CF_LIBRARY_PATH, CF_MKSTEMP, CF_NCURSES_CPPFLAGS,
	  CF_NCURSES_LIBS, CF_PATH_SYNTAX.

 20011205 (q)
	> Clark Morgan:
	+ fix:  the new builtin find feature makes it relatively easy to
	  construct arbitarily long pipe commands.  Such long commands could
	  overflow a number of vile's internal temp vars.
	+ Some win2k cleanups:
	  - on a win2k host, if $shell is bogus, read pipes don't display an
	    error message.  Instead, the editor would just hang.
	  - on a win2k host, the shell process spawned via ":!cmd" was usually
	    not executed in the foreground window.
	+ add a pattern to finderr.c to handle this case:  When using visvile
	  under developer studio, the compiler can generate (HTML-based)
	  messages have leading tabs before the filename.
	+ doc/config.doc - numbered macros noted as an anachronism
	+ doc/macros.doc - mention that numbered macros are allocated from fixed
	  pool and describe their (as far as I can tell) single
	  advantage.
        + vile.hlp:
	  + fix typo where #-<c> binding was attempted in insertmode.
          + reorganize discussion of macros to mimic (in a very
	    abbreviated form) the key information from
	    doc/macros.doc .
	> J Chris Coppick:
	+ various fixes to Vileserv.pm:
	  + various code and documentation tweaks
	  + Vileserv now automatically installs a $write-hook
	    (for "vileget -w"), unless you tell it not to (details in the doc).
	  + Vileget used to start xvile if needed.  Now it tries 'xvile', then
	    'vile'.
	  + If you hand Vileget a directory name, it will try to do something
	    useful with it.
	  + handle old Vileserv sockets more gracefully, in theory...
	+ minor fixes to Breadcrumbs.pm
	+ add perl/Help.pm
	+ add perl/CaptHook.pm, which provides useful wrappers for Vile's
	  "hook" variables.
	> Tom Dickey:
	+ correct a state in sed-filt.c after parsing a substitute command,
	  which caused alternate lines to not be highlighted.
	+ indent'd trace.c
	+ modify trace.c to make Trace() thread-safe on win32.
	+ correct small bug in ntwinio.c which would allow repaint_window() to
	  be called for a scrollbar.  This normally will not occur because of
	  the way the event queue is processed, but was apparent in debugging.

 20010925 (p)
	> Clark Morgan:
	+ Removed an ugly wart from win32 vile (dated September 11).  Tested on
	  WinME (bash and command.com), Win98 (Thompson Toolkit and
	  command.com), Win2K (cmd.exe).
	+ makefile.wnt and makefile.blc no longer use npopen.c -- all
	  equivalent functionality has been moved into w32pipe.c
	+ w32pipe.c
	  - added completely new approach for temp-files-based pipes (required
	    when using command.com as shell).
	  - force-console code removed (see next bullet)
	  - during testing noticed cases where winvile writes last ditch error
	    messages to stdout.  Uses popup-msgs now.
	+ force-console mode is now a no-op for winvile (retained solely to
	  prevent breaking existing config files).
	+ spawn.c:
	  - npflush() no longer called if using native win32 pipes (the
	    original call was always a nop for native pipes).
	  - win32 hosts call npflush() _after_ closing write pipe file
	    descriptor (important for the temp files implementation).   
	+ filters.rc no longer worries about the setting of w32pipes.
	+ gnugpg.rc no longer mentions w32pipes.
	+ macros.doc: remove force-console from example config file
	+ delete doc/w32modes.doc
	+ vile.hlp:  
	  - w32pipes and force-console updates.
	  - mention macros/gnugpg.rc wrt encryption (updated in vile.1 as well)
	  - documented interaction between cygwin's bash, console vile, and
	    interrupts.
	  - updated $os description to mirror Tom's changes in doc/macros.doc
	  - within the "Color basics" topic, discuss custom winvile colors
	+ explain how to build filters via makefile.wnt (README.PC).
	+ update vile.hlp's install dir and be more specific regarding vile's
	  installation components (doc/config.doc).
	> J Chris Coppick:
	+ implement perl/Breadcrumbs.pm (request by Clemens Fischer).
	> Kuntal Daftary:
	+ two new perl extensions for vile:
	  1. man.pm is a Unix manual pages viewer in vile.
	  2. dict.pm is a dictionary/thesaurus interface (uses the DICT protocol)
	  Drop both the files in the appropriate path ($HOME/.vile/perl for
	  Unix) and add the following lines in your .vilerc
	     perl "use dict"
	     perl "use man"
	> Mark Robinson:
	+ modify selection in winvile so that DOT is not moved.
	+ improve paste-by-right-mouse-click operation in winvile by NOT
	  setting the insertion point at the position where the mouse happens
	  to be when executing the right-click, but rather pasting at the
	  current DOT (i.e.  right-mouse-click never sets DOT).
	+ change paste in winvile to insert at DOT rather than after.  Also,
	  when pasting in insert mode, set DOT to the end of the inserted
	  text.
	> Tom Dickey:
	+ modify the check in glueBufferToResult() so that parameters of
	  search-commands can have quote-characters escaped, for consistency
	  with the logic that strips them.
	+ extend insert-exec to allow ^A and ^X prefixes to be interpreted
	  in insert mode (based on a patch by Mark Robinson).
	+ corrected binding in dates.rc that demonstrates insert-mode bindings.
	+ add a show-key-names command to show the #-style coding for function-
	  and cursor-keys.
	+ correct number of arguments for &ftime (incorrect number of arguments
	  caused the increased error-checking in 9.2o to break this function).
	+ extend support for alternate bindings by duplicating the default
	  special-key bindings at initialization so they can be customized
	  independently.  For example, this lets one define in vileinit.rc a
	  different home/end key binding for command-mode than for the default
	  (prompted by a patch by Mark Robinson).
	+ modify support for alternate bindings to use different buffer names
	  for describe-xxx-bindings commands, i.e., [Command-Bindings],
	  [Insert-Bindings] and [Select-Bindings], to make it simpler to
	  distinguish them.
	+ add a configure check for working mkstemp() function, use this for
	  spell filter to quiet linker warnings (corresponding warnings for
	  file.c are bogus).
	+ modify configure script for VILE_LIBDIR_PATH and VILE_STARTUP_PATH
	  to double backslashes, just in case the user has defined the
	  corresponding environment variables in DOS-pathname syntax (request
	  by Mark Robinson).
	+ modify adjvalset() to allow an empty response for the mode value if
	  running in a macro.
	+ modify push_variable(), which implements "~local", to check if a
	  given symbol requires quoting to avoid interpreting meta characters
	  when restoring its value (reported by Clark Morgan, e.g., for
	  $paragraph).
	+ add C preprocessor parsing to xresmode, for files that use xrdb.
	+ extend xresmode suffix pattern to add .Xdefaults-hostname
	+ correct parsing of single-line "remark" comments in sql filter, which
	  did not work unless some character followed the "rem" or "remark"
	  keyword (report by Chris Green).
	+ split-out include of <windows.h> into w32vile.h, adding some pragmas
	  which stifle warnings emitted by Visual C++ for M$ header files when
	  compiling with -W4 warning level.  Changed default warning level in
	  makefile.wnt to -W4.

 20010826 (o)
	> Clark Morgan:
	+ correct return code from set_files_to_edit() when no buffer can be
	  found or created.
	+ updates to vile.hlp:
	  a) refine w32pipes description as well as adding updates for
	     WinME/W2K
	  b) documented unmark-buffer
	+ doc/w32modes.doc now mentions WinME and W2K.
	+ add macros/gnugpg.rc, examples of using GNU gpg to encrypt/decrypt
	  a buffer.
	+ added &qpasswd, which solicits a password string from the keyboard. 
	  Each typed character is echoed as '*'.  The password is not
	  recallable via vile's usual history mechanism.  This feature enhances
	  the security of the gpg macro wrappers (which have been successfully
	  tested on Unix and Windows).  The only fly in the ointment is the
	  brief time the passphrase is visible at the top of the buffer that's
	  being encrypted/decrypted.
	> Shawn Halpenny:
	+ add lisp syntax highlighter (lispfilt.l)
	> Tom Dickey:
	+ indent'd history.c, main.c, search.c
	+ add search.rc macro (based on discussion with clemens fischer
	  <rabat@web.de>).
	+ change a few places (search.c, eval.c) which used mlforce() to
	  display "Aborted" messages to use mlwarn().
	+ several changes to improve error handling in macros (prompted by
	  reports by Clark Morgan):
	  + modify run_func() to ensure that the pointer error_val is returned
	    on an error condition.  Previously the corresponding string "ERROR"
	    was returned rather than the special pointer value, preventing
	    run_func() from detecting operations on erroneous data.
	  + return error_val from run_func() if the built-in function
	    parameters were error_val, except for special cases such as the
	    &error function.
	  + add error-checking for divide-by-zero in &divide, and &modulo.
	  + return error_val from run_func() for built-in functions &dquery,
	    &qpasswd, &query if the user presses ESC to abort the input.
	  + check for ABORT return in prompts for missing macro parameters,
	    to cancel execution of the corresponding macro.
	+ modify hst_append() and related logic to store quoted tokens in
	  [History] if the eolchar is whitespace, and if the token contains
	  embedded whitespace or quote characters.  The tokens presented for
	  editing command history are dequoted.
	+ modify hst_append() to ensure that if the glue character is a return
	  or newline, then vile will interpret that as a blank to insert
	  between tokens.  This case happens when prompting for macro
	  parameters (reported by Clark Morgan).
	+ set umask before calling mkdir, in case user's umask has been
	  mistreated, e.g., by certain mail programs that remove execute-flags
	  from the umask.
	+ minor updates to configure script macros, for ncurses
	  (CF_CURSES_CPPFLAGS, CF_MAKEFLAGS, CF_NCURSES_CPPFLAGS,
	  CF_NCURSES_VERSION, CF_PROG_EXT).
	+ modify logic of popup-msgs to keep it from popping up [Messages]
	  before the end of initialization.  This would happen for example
	  if $pagelen were altered, since 9.2m change to set need_update
	  flag rather than call vile_refresh() for mode-settings which affect
	  the screen (report by Clark Morgan).
	+ add 'buffer' to the types of parameters which may be given in a
	  macro template (report by Clark Morgan).
	+ add logic to pl-filt.c to handle case such as the second pattern in
		if(/pat1/ || /pat2/)
	+ correct implementation of is_PREPRO() in pl-filt.c, which matched
	  "#!" rather than the documented C-style "# line <number> <filename>".
	+ correct two problems in write_PATTERN() in pl-filt.c, noticed in
	  check_po script:
	  a) parse square-bracketed ranges
	  b) correct string address at the end of the loop.
	+ corrected expressions for strings in rexxfilt.l; backslash does not
	  act as an escape character.
	+ corrected special cases for $endtext and $rem in fdl-filt.l
	+ adjust ifdef's for strftime() to use it on win32.
	+ add several null-pointer checks in statevar.c
	+ use &default function to make vile-pager script a little more
	  portable with respect to the start-filename (report by Clark Morgan).
	+ implement &default built-in function, which returns the initial or
	  default value for modes and some state variables.
	+ rewrote global_val_init(), splitting out functions init_mode_value()
	  and init_state_value() to implement &default functions, which return
	  the initial/default value of the corresponding mode or state variable.
	+ reduce casts, fix signed/unsigned mismatch in prc2kcod().
	+ add missing ifdef around vl_atoul() in case no strtoul() is available
	  (report by Larry Gensch, on Tru64 5.1).
	+ modify ntwinio.c to check if the given argument list matches an
	  existing filename, and open that if so.  This allows one to use
	  SendTo to open files with blanks in their names.

 20010613 (n)
	> Tom Dickey:
	+ indent'd modes.c and os2vio.c
	+ implement show-error-expressions command, which shows more complete
	  information about the [Error Expressions] buffer.
	+ modify shmode preamble to accept a line such as
		#!/bin/sh --
	+ add a message to stderr in os2vio.c telling how to exit vile.  If the
	  OS/2 console version is run via telnet, it does not display anything,
	  and none of the screen-related functions return an error.  A message
	  is needed to guide a user to gracefully exit vile w/o rebooting the
	  system.  There is a small flicker when starting normally.
	+ add 'mouse' mode for OS/2 (CSet), to disable mouse when not wanted. 
	  Modify logic in os2vio.c to sleep briefly in the loop polling the
	  keyboard and mouse, thereby reducing CPU time for that (report by
	  Paul Marwick <paulm@waitrose.com>).
	+ widened ifdef for CSet error-expression, to make it useful when
	  building CSet applications with the OS/2 EMX version of vile.
	+ include <io.h> in file.c to make this build on OS/2 with CSet.

 20010523 (m)
	> Mark Robinson <mark.robinson@baltimore.com>:
	+ when popup-menu is inactive, if text is selected, right-click copies
	  to w32clipboard; otherwise right-click pastes from w32clipboard.
	> Tom Dickey:
	+ replace the vile_refresh() calls in modes.c with need_update flag,
	  since vile_refresh() set sgarbf, which prevented _all_ screen updates
	  including messages.
	+ implement a simple example of macros to insert or display timestamps
	  for the current buffer (macros/dates.rc).
	+ modify prc2kcod() to recognize "M-" (meta) in combination with
	  other prefixes such as "#-", needed to parse KEY_F21 to KEY_F35 with
	  the termcap driver.
	+ change the octal character constants used in KEY_F21 to KEY_F35 to
	  decimal to avoid sign-extension.
	+ implement three functions for working with timestamps: &ftime, &stime,
	  and &date, respectively for file modification time, system time, and
	  formatted date/time.
	+ disable 'working' in writeall() while writing the output.
	+ two fixes for writeall() function: (a) don't use for_each_buffer()
	  macro to iterate, since the item referred to by the loop index moves,
	  making it possible to get an infinite loop, and (b) don't try to
	  write buffers which have not been loaded (the first was reported by
	  Brendan O'Dea; both bugs date to 1996).
	+ add commands "ww!" and "wall!", to respectively write all changed
	  buffers and write all buffers, using the "w!" behavior of ignoring
	  readonly file permissions.
	+ correct an out-of-order buffer flush for the strip_tabs logic in
	  sh-filt.l, which made the end of a here-document incorrectly colored.
	+ add a simple xml majormode.
	+ format lynx output in ShowFormatted to the screen width rather than
	  the default of 80 columns.
	+ improved perl syntax highlighting (pl-filt.c) by relaxing the
	  check for "=cut" to match perl's code rather than its documentation,
	  allowing for "{" "}" grouping around a regular expression, and
	  showing variables with Ident2 class.
	+ add a null-pointer check to slconv(), just in case (report by Mark
	  Robinson).
	+ implement bold/italic/underlined fonts in winvile (this is a first
	  cut, which occasionally has pixel trash when a bold or italic
	  character extends too far out of the normal font's bounding box).
	+ add a null-pointer check in sl_to_bsl(), since that is used, for
	  example, with a parameter from cfg_locate() which may return a null.
	+ indent'd path.c

 20010429 (l)
	> Clark Morgan:
	+ expanded description of "Favorites" in win32 section of vile.hlp
	+ if a multi-char map sequence includes a long timeoutlen-user value,
	  turn on the winvile cursor while waiting for keyboard input (bug
	  reported by Jason.D.Karney@clev.frb.org).
	+ modify ntwinio.c so that custom cursor manipulation code does not
	  show the cursor if the editor does not have focus.  This change is
	  required to support the aforementioned bug fix.  I've also seen
	  infrequent occasions where winvile still emits stray cursor glyphs. 
	  This often occurs when I'm changing focus from some other app to the
	  editor via a mouse click.  I hope this latter change eliminates a
	  race condition within the editor.
	+ modify check in HighlightFilter macro to ensure that vile.exe also
	  must have w32pipes set to enable syntax highlighting.  This is a
	  necessary condition on W95/W98/WinME.
	> Tom Dickey
	+ indent'd buffer.c, file.c
	+ reimplement ":args" command to accept a filename expression.  If no
	  filename is given, as before it will show the buffer list, but if a
	  filename is given, it will replace the list of visible buffers with
	  those matching the expression.  Use ":args!" to discard changes
	  pending to one or more buffers (request by
	  Vicki.Brown@barclaysglobal.com>).
	+ add hst_reset() function, called from main loop to reinitialize data
	  used for gluing portions of a command together for the [History]
	  buffer.  This addresses a problem reported by Clark Morgan where the
	  first time a ^WG!ls command was given, vile reported "No match for"
	  ls in the current directory.  This change by itself makes vile report
	  no matches all the time, because it was attempting to do
	  filename-completion on the "ls" string.
	+ add a special case in kbd_reply(), setting KBD_REGLUE to ensure that
	  when given the command ^WG!ls does not attempt to do
	  filename-completion on the "ls" string.  Though KBD_REGLUE was added
	  in 9.2c, it was not used, since the ^R fix relies on a different
	  part of the change.  This change uses KBD_REGLUE.
	+ fix highlighting of include's in c-filt.c, which did not allow a
	  blank in the filename.  Modify highlighting of filename to Literal.
	+ add a configure check for strtoul(), which was not available on
	  SunOS 4.x.
	+ updates to configure script macros:  CF_CURSES_LIBS (split-out
	  CF_CURSES_CPPFLAGS, add check for SunOS curses), CF_IMAKE_CFLAGS
	  (disable CDPATH during test), CF_NCURSES_CPPFLAGS (improve check for
	  ncurses headers), CF_NCURSES_VERSION, CF_TERMCAP_LIBS, as well as
	  newer config.guess, config.sub scripts.
	+ correct handling of backslash in htmlfilt.l, and highlight numbers
	  in that filter.
	+ fix a trailing comma in an enum in sed-filt.c
	+ quote filename in manpage.rc when it is used in shell commands, in
	  case it contains blanks or other special characters.

 20010407 (k)
	> Clark Morgan:
	+ update note in README.PC about problems with ActivePerl.
	> Tom Dickey
	+ add a check in zotbuf() to prevent a buffer from being deleted while
	  it is being executed as a macro (report by Paul Fox).
	+ fix a potential overflow of linebuf[] in ntconio.c
	+ fixes for ntwinio.c and ntconio.c to handle default color codes
	  properly.  The logic did not mask out unrelated bits from the
	  attribute field, did not apply bold and italic codes in the right
	  order to work with default colors.
	+ make manpage.rc work on win32, etc., assuming cawf is available as
	  a substitute for nroff.
	+ check imakemode before defmode.
	+ modify ntconio.c so control/@ is translated to ^@ on insertions
	  (reported by Clark Morgan).
	+ use SL_TO_BSL() to convert path separators to native form on DOS
	  and similar systems in the return values of builtin functions such
	  as &lookup, needed this to port manpage.rc
	+ improve bas-filt.l's rules for hexadecimal constants, add action
	  highlight for "_" used as a continuation marker, and show #date#
	  constructs as a string.
	+ accept ".cmd" as a suffix for batmode, resolving conflict with OS/2
	  by making it specific to the system.
	+ modify bat-filt.l to highlight the portion labels past 8 characters.
	  Only the first 8 are significant.
	+ modify bat-filt.l to handle '@' before any command, e.g., @rem.
	+ adjust ifdef's for OPT_FINDPATH to build with configure
	  --disable-extensions.
	+ modify ntwinio.c to recognize control/@ or control/2 as ^@.
	+ add ".exp" to tclmode, for 'expect' scripts.
	+ refine suffixes for rcmode to avoid conflict with names such as
	  .lynxrc

 20010322 (j)
	> Clark Morgan:
	+ added $findpath and $find-cmd state variables.
	+ on win32 and unix hosts, modified capturecmd (aka ^X-!) to support
	  find operations that span directory tree(s).   This feature is enabled
	  via a find-cfg mode.
	+ added a section to the help file entitled:
	    Working in a project hierarchy
	  which describes several features that enable quick access to many
	  files spread over a directory hierarchy.  Features discussed include:
	  - Directory navigation (the pushd, popd, et. al. commands).
	  - Hierarchical tags
	  - File/Directory traversal (win32/Unix hosts only)
		+ w32ole.cpp compiler warning fix.
		+ put ntwinio/ntconio msg strings in proper format.
		+ eliminate a couple of atoi() calls in random.c
	> Kevin Buettner:
	+ workaround for a Perl 5.005 bug in perl_prompt().
	+ several changes to shell.pm:
	  + some documentation updates
	  + bug fixes
	  + a new command called "xterm".  which starts a shell in one of
	    vile's buffers just as "start-shell" already does, but also
	    starts an xterm through which one may (also) interact with the
	    shell.  The shell output (and echoed input) is displayed in both
	    the xterm and a vile buffer.
	> Paul Fox:
	+ fix a typo in vile.hlp's example using bind-key for a space (report
	  by Clark Morgan).
	> Tom Dickey:
	+ change an inequality in read_quoted() which had the effect of
	  changing a null (^@) entered after ^V to a -1, preventing user from
	  inserting a null character (reported by Clark Morgan).
	+ correct a loop condition in put_majormode_after(), which caused a
	  core dump when an "after" qualifier referred to a majormode which was
	  not defined.
	+ add $majormode-hook, which can override the suffix/preamble rules
	  for choosing a majormode for the current buffer.  If the associated
	  script sets the majormode, the other rules are not run.
	+ implement new majormode submode "qualifiers", which can be set to
	  "all" to specify that both suffix and preamble must match.  This is
	  used to keep rcmode and vilemode from conflicting.
	+ add null-pointer checks to choice_to_code() and choice_to_name(),
	  guarding against unimplemented enum-tables.
	+ add syntax filters for Windows ".def" and ".rc" files.
	+ add Visual Basic majormode (vbmode).
	+ add syntax filter for BASIC, and majormode basicmode.

 20010304 (i)
	> Clark Morgan:
	+ elaborated on "apropos" and "describe-key" in macros.doc
	> Paul Fox:
	+ extended check-modtimes mode, necessitated by an interaction between
	  the new unique-buffers mode and check-modtimes.  The problem is this:
	  my current project lives in a tree that makes copious use of
	  symlinks.  This means that the name by which I edit a file may not
	  match the name by which "make" refers to the file when it reports an
	  error.  "unique-buffers" normally guarantees that I won't edit the
	  file twice in this case.  but if the file gets replaced, for example
	  with ":!co -l file.c"), then the inode will change on disk, but
	  vile's notion of the inode will not change.  this causes vile to
	  create a new buffer the next time make reports an error on it (with a
	  different pathname).  With this patch, if check-modtimes is on, then
	  when the file is reread, the inode (fileuid) info is updated, and
	  vile is again in-sync with the filesystem.
	> Tom Dickey:
	+ add/use code FILEC_WRITE2 to use in mlreply_file() to avoid getting
	  prompted about overwriting a file when using ":w! filename".
	+ add definitions so winvile.exe and vile.exe use utime() to set the
	  proper date on backup files.
	+ modify writereg() so that if the user specifies ":w!", and the file
	  is not writable, it will (try to) temporarily chmod the file for
	  writable access.  Note that the view-only mode overrides this
	  behavior, unlike vim (request by Igor Schein <igor@txc.com>).
	+ modify logic of read_argument() to force interactive input of
	  parameters which have not been specified in the command.  This allows
	  a user to write a macro which can be bound to a function key and
	  still prompt for parameter values.  Unlike the '@' response token,
	  parameters can be something more than an untyped string, e.g.,
	  file/directory completion (report by <rick_wessell@email.com>).
	+ add a "directory" parameter type.
	+ change mlsave to a TBUFF, so popup-msgs will not show messages
	  truncated to NSTRING (143) columns.
	+ add $with-prefix variable which shows the prefix string in effect
	  from a "~with" or "~elsewith" directive.
	+ add $title-format variable which can be used to specify a customized
	  title for xvile or winvile.
	+ make swap-title option apply to any platform that sets window-title.
	+ modify makefile.wnt to check PROGNAME variable, which can be set
	  to override the target name, and the $progname state variable.
	+ add missing braces around a chunk of logic in api_command_cleanup(),
	  reported by antic.
	+ add ".vile" to suffixes for vilemode.

 20010224 (h)
	> Clark Morgan:
	+ fix some compiler warnings highlighted by change in 9.2g to use -W3
	  warning level in makefile.wnt (mktbls.c, ntwinio.c, w32oo.cpp,
	  wvwrap.cpp).
	+ fix bug introduced in getfile2bp() in 9.2g by compiler-warning
	  cleanup which broke ^X-e command.
	> Tom Dickey:
	+ modify definition of $progname so it can be redefined at build time,
	  allowing multiple versions of winvile to coexist.
	+ minor tweak to Clark's fix for getfile2bp() to fix the compiler
	  warning too.
	+ improved expressions for $filename-expr to avoid picking up ':'
	  unnecessarily.
	+ add an error expression for 'antic', which uses line and column
	  numbers, and correct column placement to account for tabs.  The
	  other expressions using columns were applied to listing files with
	  tabs already converted.

 20010217 (g)
	> Clark Morgan:
	+ rewrote much of the internals of winprint() and associated functions
	  were for better clarity and documentation (for the next person who
	  wanders through this code).  Corrected bugs and many FIXME's.
	+ text selection printing is now supported.
	+ if a formfeed is encountered in the text, the current page is
	  ejected.
	+ the "copies" and "collation" print dialog box options are now
	  supported regardless of the associated printer driver's capabilities
	  (or lack thereof).  The one exception is that uncollated text
	  selection copies are not permitted unless the printer driver provides
	  "native" multiple copy support.  In the event it's not possible to
	  print uncollated text selection copies, a message box is displayed
	  that notes the restriction and then offers a chance to continue with
	  collated copies.
	+ finish win32 copyright updates for 2001.
	+ if winvile's ntgetch() ignores a WM_TIMER message, dispatch the
	  message to a window proc that "cares".
	+ noticed that when incanting ":!ls | less" from within winvile, the
	  spawned console's close button is _not_ disabled if the shell
	  modifies the console title (a la bash).  Fixed for win9x hosts.  I
	  assume that the fix applies equally to NT and W2K.
	+ added bulletproof "string to [unsigned] long" conversion routines to
	  random.c (vl_atol and vl_atoul).
	+ substantially changed the implementation of vile's insertion cursor
	  interface.  Insertion cursor state changes are now handled in
	  update().
	+ added icursor (insertion cursor) mode for win32 hosts.
	+ added a boolean swap-title mode (win32 only).  If set, the editor's
	  title is displayed as "<buffer_name> - <editor_name>" instead of the
	  usual "<editor_name> - <buffer_name>".  The former conforms with the
	  behavior of many win32 apps and is also much more useful (from a
	  screen real estate point of view) when many apps are resident in the
	  task bar.
	> Juan Carlos Gil Montoro <jcgil@gmv.es>
	+ modify store_tag() function in tags.c to accept tags with qident
	  class rather than ident, that is, including colons as part of the
	  identifier.
	> Paul Fox:
	+ add setenv (set-environment-variable) command.
	> Tom Dickey:
	+ make current_undo_cookie have the same type as LINE.l_undo_cookie to
	  avoid spurious matches.
	+ add checks to finderr.c to ensure that line and column number are
	  actually numbers.
	+ correct logic in finderr.c which did not work properly if pattern
	  contained \( and \) delimiters.
	+ add pattern to finderr.c for Solaris lex.
	+ add patterns to finderr.c for Borland C++ (reported by Manish Bhobe
	  <mjbhobe@vsnl.com>).
	+ fix various minor things to make vile and winvile compile with
	  Borland C++ 5.5
	+ fix several unused-assignments reported by Borland C++ 5.5
	+ make statevar.c more compact using new functions any_rw_BOOL(),
	  any_ro_BOOL(), any_ro_INT() and any_ro_STR().
	+ change ifdef's for vl_atol() and vl_atoul() to make them independent
	  of __STDC__ value.
	+ indent'd undo.c
	+ reindented ntconio.c, ntwinio.c, random.c undo.c
	+ change most instances of 'unsigned long' to ULONG, etc., for
	  consistency.
	+ workaround in configure script macros to allow testing with autoconf
	  2.49c, which has broken the changequote() feature.
	+ fix a check in CF_CURSES_LIBS which caused the configure script to
	  assume it had found ncurses when it had not.
	+ update config.guess/config.sub to subversions version, which finally
	  includes OS/2 EMX.
	+ fix sh-filt.l to compile with lex that uses yytext array rather
	  than char* pointer, e.g., SCO OpenServer.

 20010122 (f)
	> Tom Dickey:
	+ several related changes to regexp.c:
	  + add first cut of logic for bounds (but see buglist).
	  + implement POSIX character classes and analogous escapes like \d to
	    make them more vile-like (prompted by discussion with George
	    Eccles).
	  + remove fallback for strcspn().
	  + indent'd
	+ work around NetBSD 1.5's use of MK symbol in curses.h (reported by
	  Matthias Buelow).
	+ add syntax filter for ECLiPSe, a dialect of Prolog (from Joachim
	  Schimpf <j.schimpf@icparc.ic.ac.uk>).
	+ modify sh-filt.l to recognize "<<-" marker beginning a here-document.
	  That tells ksh and similar shells to ignore leading tabs, including
	  when matching the final word of the here-document.
	+ fix some of the staircasing problems with curses.c driver by saving
	  and restoring the tty modes explicitly, so we can separate that
	  effect from the screen initialization that curses does (fixes a
	  staircasing in the usage message reported by Mikel Finch
	  <Mikel.Finch@med.ge.com>).
	+ add Verlog filter and corresponding majormode vlogmode (request by
	  Balekudru Krishna <bkrishna@asicdesigners.com>).
	+ correct an 'awk' in configure.in that should have been $AWK.

 20010106 (e)
	> Clark Morgan:
	+ workaround for a bug in wvwrap observed on win96/winme.  wvwrap uses
	  COM to send this stream of commands to winvile:
		:cd <path>\n:e <file>\n
	  Playing with this a bit, I found that I could reproduce this problem
	  using these commands (sans wvwrap):
		[win]vile
		:cd \\remote_node\share_drive_name
		:e autoexec.bat           ; for example
	  [win]vile could not "open" the specified file and treated it as a new
	  file.  The problem persists even if forward slashes are used as an
	  argument to the cd command.  I don't know if this problem exists on
	  NT or W2K.  The fix is to pass filenames to fopen() in canonical
	  Win32/DOS format (i.e., paths include backslash delimiters).  I've
	  heard several developers say that the win32 version of fopen()
	  supports both forward and backward slashes.  Well, using VC5.0++
	  (SP3), I know of at least one case where that assertion is false.  In
	  addition, it was also necessary to ripple SL_TO_BSL() changes through
	  various system calls in write_backup_file(), due to the same observed
	  behavior.
	+ modify sh-filt.l to avoid coloring the white space that precedes the
	  ':' command.
	+ added basic win32 printing for winvile via these two new commands:
	       winprint winpage-setup
	  This feature is not currently available for console vile.  _Missing_
	  printing features include:
	  + ability to set printing font (distinct from display font),
	  + header/footer strings (footer currently hardwired as centered page #)
	  + printing of current selection
	  + collation for printer drivers that don't support this feature
	  + N copies for printer drivers that don't support this feature
	  + color and visual attributes
	  Tested on Win98/95 using an HP LJ4Plus and an HP DJ870CSe.
	+ added  "Print..." and "Page setup..." selections to winvile system
	  menu.
	+ when win32 common open/save dialog boxes are dismissed during a
	  console vile editing session, attempt to re-establish window focus
	  for the editor.
	+ found a way to disable a spawned console's close button (significant
	  winvile hole closed).  Thank you, Mr. Petzold.
	+ clean out a couple of bugs in buglist that were fixed long ago.
	+ in ntwinio_font_frm_str(), report win32 error(s) before making another
	  win32 API call (doh).
	+ in the remarks section of a number of Win32 API calls, I noticed
	  verbiage similar to this:
	      "Resources associated with a menu that is assigned to a window
	      are freed automatically.  If the menu is not assigned to a
	      window, an application must free system resources associated with
	      the menu before closing.  An application frees menu resources by
	      calling the DestroyMenu function."
	  Since winvile's popup menu is not assigned to a window, I added code
	  to clean it up.  If the verbiage above is to be believed, then
	  apparently "modern" Windows apps (i.e., post-Win 3.11) can still leak
	  system resources.  Oh my.
	> Tom Dickey:
	+ make check in filesave() for missing filename consistent with
	  writereg, which checked for internal filenames rather than simply a
	  missing name.
	+ add check in writeall() for attempt to write internal buffer such
	  as [unnamed], and show the buffer name rather than the empty filename
	  in the resulting warning message.
	+ add write-all-buffers command, to attempt to write all buffers
	  whether or not modified (request by Clark Morgan).
	+ modify adjvalueset() to allow users to set strings and patterns to an
	  empty value with 'unset'.  Previously, an 'unset' would always prompt
	  for a value, which had the effect of treating an empty response as
	  keeping the current global buffer or window value.  Note that
	  'unsetl' is unaffected.
	+ modify var_LCOLS() to avoid having the sideways value subtracted from
	  $lcols.  This is used in ^G (reported by Clark Morgan).
	+ change several entries in dcl.key to shorter abbreviations.
	+ add configure check for existence of /dev/tty, to work around broken
	  pty implementation on QNX: if one su's from root, /dev/tty is usable
	  while the pty (which ttyname() cites) is not.
	+ implement x-modifier parsing for perl expressions.  According to the
	  perl documentation, the '#' markers in Jim Crigler's example would be
	  treated as comments if there was a /x modifier.  vim does not check
	  for this.
	+ fix an infinite loop in pl-filt.c when parsing this example:
	    $rest =~ /^1\s+              # first action
		      (\S+)\s+           # date
		      (\S+)\s+           # time
		      ((?:\w|\s)+)\b\s+
	  The code was expecting the first "\s" on the last line to be
	  followed by a "+" sign or other meta character, and dithered between
	  eCODE and ePATTERN cases (reported by Jim Crigler).
	+ correct winvile command-line parsing:  single-quotes should
	  be considered part of the parameter.  Also, ignore empty
	  parameters, to allow scripts to use double-quoted
	  parameters, though note that SendTo under W2K automatically
	  double-quotes pathnames that require this.
	+ correct filtername compiled into vile-nr-filt, which did not match
	  nrmode.
	+ add popup-menu mode for winvile (patch by Mark Robinson
	  <Mrobinson@baltimore.com>).
	+ modify value for bindir in filters/makefile to exclude paths past
	  the first in $VILE_LIBDIR_PATH (reported by Chris Green
	  <chris@areti.co.uk>).
	+ apply $CFLAGS/$CPPFLAGS change to CF_X_TOOLKIT configure macro.
	+ correct allocation size in OpenKeywords(), which was not long enough
	  (patch by Joachim Schimpf <j.schimpf@icparc.ic.ac.uk>).
	+ fixes to build on Windows 2000 (win2k) with perl 5.6.0, Visual C++
	  5.0 (mkprlenv.wnt, filters/makefile.wnt).

 20001206 (d)
	> Kevin Buettner:
	+ change default for $XSHELLFLAGS from "-c" to "-e", which matches the
	  documentation for $xshell-flags.
	+ make updlineattrs() even more efficient and also fixes a problem
	  with attributes not always being displayed correctly across adjacent
	  rows.
	> Tom Dickey:
	+ revert part of the PutChar() change from 9.2c, since it incorrectly
	  puts the cursor at the first character of a line after a "put"
	  (reported by Paul Fox).
	+ add/use BUFFER.b_inuse value to ensure that we do not recreate a
	  stored procedure that is currently being executed (reported by
	  George Eccles, Clark Morgan).
	+ add dummy parameters to invocation of tparm() to make this build on
	  HPUX and AIX which use the X/Open non-varargs prototype for that
	  function (reported by Jordan Henderson
	  <jhenderson@daynt1.daas.dla.mil>).

 20001115 (c)
	> Clark Morgan:
	+ minor updates to vile.hlp, macros.doc
	+ added select-all and selection-clear commands.  The former command
	  selects, highlights, and yanks all text in the current buffer to the
	  unnamed register.  The latter command removes a selection's
	  highlighted attributes.  Select-all is only available on hosts where
	  vile provides integrated mouse support.
	+ added "Select All" to winvile's right-mouse-button menu.
	+ added text to properly describe win32 bindings that use VK_DELETE
	  (delete key).  This is a bug fix.
	+ winvile's right-mouse-button displays the key bindings of all menu
	  items that are bound to vile commands (previously, only some bindings
	  were displayed).  The menu's key binding text is synthesized at
	  runtime.  This synthesis code was modified so that if there is no
	  binding, winvile displays nothing, rather than garbage (bug fix).
	+ stub in some commands for win32 printing.
	+ fixes for this problem reported by Richard Hussong
	  <rhussong@ciena.com>:
	    "Winvile sometimes appears to receive and process cursor-motion
	    events when the cursor is not in the window, even when it does not
	    have the focus.  The effect is that the Vile window scrolls.  I
	    have even seen this happen when the cursor was moved from one half
	    of a split Winvile window to the other - the window that the cursor
	    had just left started scrolling spontaneously.  Note that this
	    happens with no mouse buttons pressed."
	  * implement mouse capture a la Petzold's "Programming Windows 95".
	  * make sure timer is allocated before starting autoscroll.
	  * only autoscroll if WM_TIMER timer ID matches that of timer created
	    during autoscroll init.
	> Kevin Buettner:
	+ improve performance for very long syntax-highlighted lines
	  essentially converts a quadratic algorithm into a linear one.  It
	  also fixes the crasher you get when you change from linewrap mode to
	  nolinewrap mode where the first line won't fit on the screen.
	  (report by Clark Morgan).
	+ fix related problem where VASPCOL code was interpreted incorrectly as
	  VASPCOL | VASEL | VAREV, making add_line_attribute() consider this to
	  be a selection (due to VASEL being set) and forcing the attribute to
	  a buffer attribute (which it needs to be for selections.)
	+ add check in update() to make sure that movements in very long
	  wrapped lines get updated properly (reported by Clark Morgan).
	> Paul Fox:
	+ modify handling of select() in ttgetc() to check for out-of-band
	  conditions, to avoid looping on errors in stdin.
	> Tom Dickey:
	+ add check in vileperl.rc in case the server is still running, to
	  avoid error message (reported by Bruno Betro <bruno@iami.mi.cnr.it>,
	  discussion by J Chris Coppick and Clark Morgan).
	+ make corresponding changes for poll() in ttgetc(), as noted by Paul
	  Fox.
	+ fix two quirks of PutChar(), in line.c:
	  + yanking all of vile.hlp with yG, then putting (p) into an empty
	    buffer would put an empty line on the end, but remove the initial
	    empty line (reported by Clark Morgan).
	  + restore DOT to the original location after putting the text.
	+ modify treatment of pushed_back flag in kbd_reply() so it will force
	  the given partial result to be glued to the pushed-back string.
	  This fixes a problem using ^R to read the result of a shell command
	  (reported by George Eccles <gbeccles@a-znet.com>).
	+ modify form of includes to be consistent, e.g., quoted includes for
	  vile's source files other than config.h which should always use
	  brackets (reported by Clark Morgan).

 20001104 (b)
	> Clark Morgan:
	+ add command dirs-clear, which clears dirstack and kills dirstack
	  buffer.
	+ add command dirs-add, which adds a directory to dirstack[top -1]; cwd
	  remains unchanged.  This command permits initialization of dirstack
	  via a macro and/or startup file.
	+ remove a state variable from ntgetch(), which could conceivably fall
	  out of sync due to calls to winvile_cursor_state() by other vile
	  modules.  This appears to fix a bug which would cause winvile's
	  cursor to vanish.  Switching to a different window would eventually
	  allow winvile's cursor to reappear (reported by Richard Hussong
	  <rhussong@ciena.com>).
	+ update README for 9.2
	+ add caveat in doc/macros.doc regarding inline comments for commands
	  that accept optional parameters.
	+ update vile.1:  Add -i, -R, and -k to invocation switches.  Add a new
	  encryption section.  Note that vile's encryption is not compatible
	  with vim.  Remove reference to nonexistent -m switch (which was
	  supposed to encrypt/decrypt mail messages).
	+ document that write-file accepts an optional filename argument
	+ change $crypt variable so attempts to read it return the string
	  "[write only]" rather than the ERROR token.
	+ if last element is popped off dirstack and [DirStack] is the only
	  visible buffer, be sure to update [DirStack].
	+ add consistent error message delimiters for modules that I regularly
	  modify.
	+ when winvile spawns a dynamic console, the parent process ignores all
	  win32-supported signals until the console exits.  This prevents a
	  Ctrl+Break in the console window (for example) from rolling up
	  winvile.  Patch is based on code I recently noticed in the vim
	  sources.
	> Tom Dickey:
	+ add configure check for ispell or spell program, use that in spell
	  filter.
	+ add double-quote character to those not treated as part of a filename
	  in the default for $filename-expr
	+ add/use CharOf() macro to suppress sign-extension of char type on
	  platforms where this is a problem in ctype macros, e.g., Solaris.
	+ add variables $error-expr and $error-match, which show the last error
	  expression and the text it matched.
	+ expand ifdef's for pop_fake_win()/push_fake_win() to include the
	  tprintf() logic, making 9.2 build on VMS.
	+ change several configure macros to use $CPPFLAGS consistently for
	  preprocessor options rather than $CFLAGS.

 20001026 (a)
	> Clark Morgan:
	+ expanded description of 00-10-11 item in buglist (:!ls in winvile)
	> Tom Dickey:
	+ minor fix to sh-filt.l, adding default action for <HEREDOC>, which
	  is needed to match $'s.
	+ rename getcchar() to vl_getcchar() to avoid conflict with X/Open
	  curses function.
	+ correct change to imply_buf (9.1x), which resulted in reading each
	  file twice if implybuf was set true.  Only files that are being
	  written should be reread.
	+ update config.guess, config.sub to reflect changes at
	  subversions.gnu.org
	+ update some details in doc/dir.doc to reflect renaming, etc (reported
	  by Kevin Luu <kevin@islanddata.com>).
	+ correct substitution of path to filters source-directory in
	  mk-2nd.awk, which did not take in account that 'configure' might be
	  invoked with an absolute path, so the $top_srcdir value also would
	  be absolute (reported by Kevin Buettner).
	+ correct regular expressions for configure script's option value of
	  --with-builtin-filters, probably broken in 9.1p when changing
	  genmake.mak to 3-column format (reported by Michael Finken).

Changes for vile 9.2 (released Tue Oct 17 2000)

 20001015 (za)
	> Clark Morgan:
	+ added pushd, popd, dirs.
	+ added ~trace/$debug documentation (taken from doc/macros.doc) to
	  Debug section of help file.
	+ made paragraph spacing in macros.doc consistent.  Fixed an instance
	  where the formatted text exceeded 80 cols with tabstops set at 8.
	+ when winvile is started from a shell, there are times when stdout and
	  stdin (and maybe stderr) have been redirected to handles that can't
	  be accessed by the running (GUI) process.  This is known to occur
	  with the CYGWIN shell(s) on a WinNT host.  Add code to get the proper
	  stdin/stdout handles, as well as ensure that the dynamically
	  allocated console doesn't use black text on black background.
	+ documentation updates: buglist item for winvile with :!ls
 	> Brendan O'Dea:
	+ fix a couple more places with untying handles for Perl.
	> Tom Dickey:
	+ document known problems with curses.c driver

 20001010 (z)
	> Clark Morgan:
	+ fix a display glitch in w32_keybrd_reopen().
 	> Brendan O'Dea:
	+ problem:  in Perl 5.6.0, some changes to the tied filehandle
	  mechanism break anything which attempts to re-open STDOUT/STDERR,
	  such as shell.pm as that now attempts to invoke the non-existent
	  method Vile::Buffer::OPEN .
	  Workaround: untie the handles before re-opening.
	> Tom Dickey:
	+ use new function SamePixel() to treat Pixel values as equivalent if
	  the difference between each of their RGB components is relatively
	  small.  Add a check for the default resource value of fcolor0,
	  forcing that to black if xvile's foreground does not look different
	  from white.  This makes some of the color palette commands, e.g.,
		:set cs=black
	  work properly.
	+ correct computation of 'diff' variable in tcapattr(), and add a check
	  for coincidence between strings that are used to turn off
	  corresponding video attributes.  The first error made vile turn off
	  the wrong attributes under some conditions, and the second would
	  cause it to omit turning back on attributes that it had inadvertently
	  turned off (reported by Clark Morgan).
	+ add imakeflt.l, to highlight Imakefile's.  Using c-filt.c was not
	  satisfactory because it did not treat quotes properly on comment
	  lines.
	+ minor fix to makefilt.l to treat "#include" as a comment.
	+ minor fix to vilefilt.l to prevent double-quoted text from spanning
	  multiple lines.

 20001005 (y)
	> Clark Morgan:
	+ update makefile.blc, add w32oo.obj
	+ when pasting to clipboard, use a less ambiguous status message.
	+ change global var that's used to detect when minibuffer is active.
	  Keying on "bminip" doesn't work in all cases.
	+ for winvile, allow clipboard paste via RMB menu into minibuffer.
	+ when pasting into minibuffer, don't report an error if an attempt is
	  made to paste more than one line.  Instead, clip the paste to a
	  single line.  This behavior mimics the action taken under similar
	  circumstances by nontrivial windows apps (e.g., Outlook and IE).
	+ initialize the winvile "Save As" dialog with the name of the current
	  open file.
	+ modify 'setv' logic to provide the current value of a variable when
	  setting it (request by Pedro Gomes).
	+ added the state variable $favorites, which returns the path to the Windows
	  Favorites directory.  On a Win95/98 host, this feature affects
	  console vile.  When console vile starts, the "launch cursor"
	  (combined pointer/hour glass cursor) is displayed for ~15 seconds on
	  a 166 MHz Classic Pentium host.  I would presume this is because the
	  console app is now linked with OLE32.LIB .  During this 15-sec
	  interval, normal vile operations are unaffected.  This effect does
	  not occur on NT hosts available for my tests (although they are a tad
	  faster than 166 MHz :-).
	+ added new file w32oo.cpp to vile's distribution.  This module
	  comprises a collection of Win32-specific functions that require a C++
	  (OO) compilation.
	+ winopen, winopen-nocd, winsave, and winsave-nocd now each take an
	  optional directory argument, which specifies the initial directory
	  opened by the Open/Save Win32 common dialogs.  If the optional
	  directory is not specified, cwd is used by default.
	+ added a "Favorites" menu selection to winvile's RMB menu, which
	  executes the command "winopen $favorites".
	+ shorten the path in set_directory()'s "Couldn't change" error message
	  if the complete text won't fit in the message line.
	+ on a win32 host, ":cd<CR>" is mapped to ":cd ~".  This change makes
	  win32 hosts compatble with VMS and Unix.
	> Tom Dickey:
	+ modify flt_putc() in builtflt.c to avoid incrementing line pointer
	  twice if the filter emits a newline before the actual end of line.
	  That could make the program count a line twice, for instance.
	+ implement name-completion for user variables, e.g., %foo.
	+ rephrase loop in purge_line_attribs() to handle the case where the
	  ending line-pointer is at the end of the buffer.  This makes the
	  ^A-NG command (clear-attributes-til) work when the cursor is on the
	  first line (reported by Christian Lindig).
	+ modify sh-filt.l to allow here-document tags such as containing
	  punctuation characters, e.g., "eof/".

 20000926 (x)
	> Clark Morgan:
	+ prevent autocolor from overwriting the message-line when '_' or ^X-_
	  have been pressed, but the subsequent buffer selection key has not
	  yet been pressed.
	+ for several select cases, when a long path causes message line text
	  to exceed the current window width, that path is shortened on the
	  left until the message text fits (if possible).  Those select cases
	  include failure to save a file, reading in a new file, and writing
	  out (or appending to) a file.
	+ document ":w >>filename" in vile.hlp
	+ report errors if user attempts to copy from mini-buffer.  The error
	  message only shows up if "pm" is enabled, since there's currently no
	  graceful way for a vile command to unwind execution from the
	  minibuffer context.
	+ allow pasting of one line of text into mini-buffer.
	+ improve makefile.l, don't add syntax attributes to the whitespace
	  embedded within these token sequences:
	     ([<white>]<name>[<white>]|\\\n)+(:|=)
	> Tom Dickey:
	+ correct default attribute in key-filt.c's color_of() function, which
	  made newlines colored as "Error".
	+ modify behavior of imply_alt() so that if the buffer already exists
	  and is not modified, it will be automatically reread.
	+ correct behavior of imply_alt() when the specified file is being
	  appended to.  Given ":w >>foo", it was making a buffer named ">>foo".
	+ add uppercase "TRUE" and "FALSE" to fsm_bool_choices[], so
	  assignments to boolean modes works properly within a macro (reported
	  by Clark Morgan).
	+ add %c and %l format types to finderr.c, which use 0-based offsets
	  rather than 1-based offsets (prompted by comments by Christian Lindig
	  <lindig@eecs.harvard.edu> that some tools use 0-based offsets).
	+ modify logic for name-completion in kbd_reply() to force the cursor
	  to the end of the input buffer before attempting to complete.
	  Otherwise, partial completions could be written in the middle of the
	  buffer.
	+ modify handling of motion commands in editMiniBuffer() to use NOMINI
	  flag rather than guess which commands with MOTION flag should not be
	  applied (fixes a bug report by Jim Crigler, which noted that 'h'
	  following '^G' was not treated as a cursor motion).
	+ add/use NOMINI flag to indicate commands that cannot be used in
	  minibuffer editing motions.
	+ use DisplayHeight() rather than 1000 for paneMaximum of scrollbars
	  in Motif version of xvile (report/analysis by Larry Gensch).
	+ add 'prefix=$(prefix)' to makefile.in where it recurs to filters
	  directory to accommodate older 'make' programs which do not inherit
	  options (request by Michael Finken).
	+ show unterminated quotes in sh, make and perl filters as "Error".
	+ correct handling of QUOTED (double-quote) state in sh-filt.l, which
	  did not interpret escaped double-quote or identifiers since one
	  pattern was too greedy.  Show escaped double-quote as "Action".
	+ correct SSTRING expression in sh-filt.l, which was assuming backslash
	  would quote other characters in a single-quoted string.
	+ change mapping in vileinit.rc for ToggleList and ToggleTabs to omit
	  the "execute-procedure" since that is no longer needed, and makes
	  the :history less useful.

 20000914 (w)
	> Clark Morgan
	+ macros.doc:  expand description regarding comment delimiters in
	  macros.
	+ fix vilefilt.l:  syntax attributes should not applied to leading
	  white space that precedes a macro keyword
	+ fix vilefilt.l:  most cases of trailing comments are rendered in the
	  "Comment" class attribute (new functionality).  There is one corner
	  case that's not handled, as described in block comments added to
	  vilefilt.l .
	> Tom Dickey
	+ modify htmlfilt.l to parse comments line-by-line, making it work
	  properly with Solaris' lex program which does not match newlines in a
	  pattern.  Solaris lex also is easily confused by RE's that look like
	  ranges but are not, such as "[^-\n"], and can only apply '+' to a
	  single-character RE (report by Jenny Brown <jenny@cyberdesic.com>).
	+ add functions flt_begin(), etc., to filters.c to consolidate logic
	  in filters for attributing multi-line text as a single region.
	  Use this to simplify bat, make, perl, py, tbl, txt, xres filters.
	+ add a check for an empty table in fill_partial() to avoid buffer
	  overrun if caller provides incorrect parameter.
	+ correct a case in editMinibuffer() which did not completely restore
	  the buffer position when an error was found.  This led to passing
	  an empty buffer with an associated nonzero position to fill_partial(),
	  which dumped core.
	+ add &dquery function which prompts for input with a given default
	  value (request by George Eccles).
	+ indent'd exec.c
	+ modify logic in kbd_reply() a different manner, by adding a parameter
	  to get_token() which returns the actual eolchar matched, so that for
	  expressions such as "foo=x", we use '=' rather than 'x' for the
	  parameter to set_end_string() (reported by Clark Morgan).
	+ add a check for line length in editMinibuffer(), in case an
	  unexpected message such as the one in kbd_complete() from 9.1v wipes
	  out the current minibuffer.  The combination of the two caused a GPF
	  when typing ":set vis=<return>off<return>" (reported by Pedro Gomes
	  <Pedro.Gomes@lis2.siemens.pt>.
	+ modify kbd_complete() to only show the 'No match for ...' message if
	  it is run via a macro.  Interactive mismatches will just beep,
	  because a message would get in the way.
	+ modified bat-filt.l and tcl-filt.l to build with Solaris lex.  The
	  latter requires a larger tablesize (reported by Jim Crigler).

 20000905 (v)
	> Tom Dickey
	+ add check in CF_CURSES_LIBS in case $LIBS is already set to something
	  like "-lcurses -ltermcap".
	+ update config.guess, config.sub to 20000819 patch.
	+ modify tcl-filt.l based on examples by Juan Carlos Gil Montoro
	  <jcgil@gmv.es>:
	  + add namespace syntax to IDENT rule, and apply this to the IDENT1
	    rule as well.
	  + allow comments to have continuation lines.
	  + flag errors for badly-formatted numbers.
	  + treat {"} and \" specially (not as string literals).
	  + handle unterminated string, i.e., a newline ends a string even if
	    no quote is found.
	  + highlight trailing backslash as "Action".
	  + make a new class, "Braces" to control how curly braces are
	    highlighted, so this is not part of tcl-filt.l, but specified in
	    tcl.key
	+ modify logic in kbd_reply() to set last_eolchar from the given
	  eolchar, e.g., '=', rather than the current contents of execstr,
	  since that may contain an arbitrary character such as the first
	  one of an identifier.  That made commands such as
		setl autowrite=false
	  in a macro not work, since 'f' (false) was used (reported by
	  Clark Morgan).
	+ modify kbd_complete() to show a message when it fails to find a
	  match.
	+ relaxed suffix rule for vilemode to ensure that vile.rc is always
	  interpreted in that mode, even if it does not reside in a directory
	  named "vile" (reported by Clark Morgan).
	+ implement new Perl syntax filter, pl-filt.c (the older one is still
	  available for comparison, but is internally renamed to "pl" rather
	  than "perl").
	+ use tgoto() to simplify alternative to tparm() when formatting
	  escape sequence for colors in tcap.c
	+ suppress logic in tcap.c that resets colors when the terminal does
	  not support color.  Otherwise, reverse video and other non-color
	  attributes do not work (reported by Clark Morgan).

 20000828 (u)
	> Tom Dickey
	+ add error checks in sed-filt.c for unbalanced curly or square
	  brackets.
	+ make regular expresion delimiters easier to read in sedmode by
	  coloring them with Action class.
	+ modify preamble expressions that match a pathname (e.g., "#!/bin/sh")
	  to allow trailing blanks on that line.
	+ correct preamble expression for sedmode, which interfered with shmode.
	+ correct syntax error in filters/filterio.c for stub functions used
	  for vilemode symbols (reported by Pedro Miguel Marrecas Gomes
	  <GomeZ@netc.pt> and Jim Crigler <criglerj@yahoo.com>).

 20000828 (t)
	> Tom Dickey
	+ add stubs for dname_to_dirnum(), vl_lookup_func() and engl2fnc() to
	  filters/filterio.c, use those to provide hooks for vilemode when
	  configured for builtin filters to highlight unknown keywords.
	+ modify dname_to_dirnum() to treat any negative return from
	  choice_to_code() as D_UNKNOWN, restoring logic that warns about
	  unknown directives (reported by Clark Morgan).
	+ add sedmode, and corresponding syntax filter.
	+ rename some functions (line_count, filename, cd, help, source) to
	  use "vl_" prefix to avoid shadow-warnings from gcc.
	+ indent'd eval.c
	+ implement function &error, which returns true if its argument was
	  an ERROR token (i.e., internally error_val).
	+ add new TBUFF-oriented functions mlreply2(), kbd_string2() to wrap
	  kbd_reply().  These are needed to support &error, but would be useful
	  in making vile able to handle input data with nulls.
	+ modify TBUFF functions to check if error_val is copied to a TBUFF.
	  In that case, set a flag which makes tb_values() return error_val.
	+ fixes to recover if a 'source' command results in runaway recursion,
	  e.g., if foo.rc contains the line "source foo.rc".  In
	  perform_dobuf(), ensure that the line pointer we are using to restore
	  the buffer/window current line is actually in them, and add a
	  reference count in dofile() to avoid removing a buffer which is in
	  use for sourcing.
	+ corrected some places in makefilt.l and mms-filt.l which were writing
	  via yyout, which caused spurious characters to be printed with
	  builtin-filters.

 20000820 (s)
	> Clark Morgan:
	+ make Ian Jamison's change to w32pipe.c the default on all hosts,
	  tested in W95 and NT.
	> Tom Dickey:
	+ minor fixes to IDENT and VARIABLE definitions in bat-filt.l
	+ modify win32 scripts to eliminate redirecting standard output as
	  part of generating portions of makefiles, since that simply does
	  not work on w95 (reported by Clark Morgan).
	+ modify configure script to avoid using 'find', since OS/2 EMX's
	  'find' utility is a different program altogether (like grep).
	+ add configure --with-ncurses option, mainly for OS/2 EMX which has
	  an unusable termcap library.
	+ updated config.guess, config.sub from lynx 2.8.4dev.7 (now on my
	  ftp area as autoconf 2.13 patch 200000819, since I resync'd the
	  OS/2 EMX patch as well).
	+ refine fence-elif expression in shmode's "case" group, which allowed
	  a right parenthesis with only spaces before it to match (reported by
	  Clark Morgan).

 20000816 (r)
	> Tom Dickey:
	+ add logic to m4-filt.c to handle argument lists that span multiple
	  lines.
	+ highlight unbalanced quote in m4-filt.c as an error.
	+ modify majormode suffix matching to use the ignorecase mode values
	  for those systems that are normally case-sensitive, making this work
	  for names such as "FOO.BAT" which happen to be uppercase.
	+ suppress autocolor when doingsweep is true, e.g., in multimotion().
	+ add variable $filter-list to show all of the builtin-filters.
	+ modify win32 scripts to avoid redirecting the output of 'echo',
	  which apparently goes to stderr on w95 (reported by Clark Morgan).
	+ minor fixes for configure script macro CF_CURSES_LIBS,
	  CF_CURSES_TERMCAP, CF_SIZECHANGE, CF_TYPE_OUTCHAR, CF_UPPER,
	  CF_X_ATHENA from lynx, xterm and tin.
	+ newer config.guess, config.sub, from lynx 2.8.4dev.7
	+ fix starting condition of STRING in tc-filt.l
	+ add pcmode, for printcap.
	+ refine xresmode to require that mixed-case names match only in an
	  app-defaults directory, to avoid matching things such as MD5sums.

 20000809 (q)
	> J. Chris Coppick, with some advice from Brendan O'Dea:
	+ cleanup of Vileserv.pm and vileget (version 1.2)
	+ Vileserv now uses the registry, so 'perl "use Vileserv"' in
	  your .vilerc automagically adds the commands startserv, stopserv,
	  and vileserv-help.
	+ Vileserv tries to be smarter about finding your perl binary.  The
	  Vile variable %vileserv-perl-path can be used for customization.
	+ Vileserv tries to be smarter about the socket path that it uses.  The
	  env.  variable VILESOCK, as well as the Vile variable
	  %vileserv-socket-path can be used.  Also, vileget supports an option
	  for overriding the socket path.  The default location is still
	  ~/.vilesock.  With a little scheming, you can now run and control
	  multiple XVile sessions on one host, or use Vileserv on multiple
	  hosts with a shared home dir.
	+ Vileget now uses the -d option to change XVile's working directory.
	  This is an interface change from version 1.1, where the -c option
	  was used for this.
	+ Vileget now uses the -c and -C options for passing arbitrary Vile
	  commands to a running XVile.  See the vileget manual page ('perldoc
	  vileget') for more info on this.  Please note the necessary Vile
	  variable %vileserv-accept-commands.
	> Tom Dickey:
	+ improve PATTERN definition in awk, lex and yacc to color unescaped
	  blanks within a bracketed range.
	+ fix logic in flt_puts(), which did not ensure that regionshape was
	  set, and also remove spurious trailing blanks from attribute string.
	+ initialize static variables in several filters to make them work
	  properly in the builtin-filters configuration.
	+ change indent.pro to line up parentheses.
	+ add example macro AddError to vile.hlp which illustrates how to add a
	  string to [Error Expressions] (request by Christian Lindig
	  <lindig@ips.cs.tu-bs.de>)
	+ modify win32 scripts which generate portions of makefile.wnt to not
	  rely on WinNT's "enhanced" shell for-loop feature, using new utility
	  program genmake.  Adjust generated builtflt.h on win32 to allow for
	  building C filters only, if no $(LEX) is specified.  Also, modify
	  makefile.wnt to avoid using && in recursion to work around
	  limitations of w95 shell (reports by Clark Morgan).
	> Ian Jamison:
	+ add workaround for broken DuplicateHandle() function on WIN2K,
	  ifdef'd with DUP_HANDLE_BROKEN_ON_WIN2K.  That caused
	  w32_inout_popen() to fail.

 20000728 (p)
	> Tom Dickey:
	+ add a mode for the Standard ML language.  There is also a minor tweak
	  to cpp.key (patch by Felix Advantage <felixadv@access.net.au>).
	+ modify builtflt.c to treat record separators as newlines, consistent
	  with filter logic.
	+ rewrote filters/makefile.wnt to generate lists and rules using
	  scripts reading genmake.mak, to facilitate building internal or
	  external filters.
	+ change 1-or-more blanks in one of the error-finder expresssions to
	  0-or-more to make this work with weblint.

 20000725 (o)
	> Clark Morgan:
	+ add example macro to vile.hlp from this-file-dir by Richard Hussong
	  but renamed to cdcur like Alex Wetmore's variation as suggested by
	  Paul Fox.
	+ if an NT console's display and buffer geometry are not the same, then
	  vile.exe's cursor defaults to the minimum size.  Modify so that the
	  editor's cursor size is inherited from the parent console window.
	+ correct glob test for "~" which can be expanded as user's home
	  directory for VMS and win32.  The test allowed expansion of tilde at
	  points other than the beginning of a path component, which can happen
	  on win32.
	> Tom Dickey:
	+ modify decode_exp() to skip over null pointers in the list
	  of subexpressions in regexp struct which are set when a
	  nested group was parsed, e.g., in the $filename-expr for
	  hgrep on win32.  The regular expresion code finds the proper
	  number of \( \) atoms, but the array indices do not match,
	  causing ^X^X to fail (reported by Clark Morgan).
	+ correct missing check for backslash within a character range in
	  regatom(), which caused patterns such as "[^\[\]]" to match any
	  character other than left bracket which was followed by a right
	  bracket.
	+ implement 'highlight' mode, which when disabled prevents the
	  corresponding buffers from being syntax-highlighted (request by
	  Moo Kim <kim@mailbox.elsegundoca.ncr.com>).
	+ add newsrcmode to prevent ".newsrc" file from being treated as a
	  shell script; otherwise every number in the file will be highlighted,
	  which is very slow for long lines (reported by Clark Morgan).

 20000710 (n)
	> Clark Morgan:
	+ enable tilde-expansion for win32 in glob.c
	+ modify spawncli() for win32 to ensure that a console window is
	  created for the ":sh" command when winvile is invoked from a GUI
	  rather than the command-line.
	+ add -console command-line option to win32 console vile to provide
	  workaround for make the mouse work when reading from stdin.
	+ update some win32-specific features in help file.
	+ copying to clipboard (via right mouse button) does not clear
	  selection (mimics expected win32 application behavior).
	+ undo/redo selections (via right mouse button) are context sensitive.
	> Tom Dickey:
	+ move special case for literal ^A in syntax-highlighted text into
	  flt_putc() so other filters that happen to find a control/A will echo
	  it as two characters, to work with the logic in parse_attribute().
	+ add reset-majormode command, which tells vile to recompute the
	  appropriate $majormode for the current buffer (suggested by a report
	  by Shawn Halpenny who was constructing a temporary buffer which had
	  no majormode associated -- setting the filename temporarily would
	  allow this command to set the majormode).
	+ revert binding change in editMinibuffer() so that vi-like commands
	  such as B, e, $ will work again in ^G mode (reported by Jim Crigler
	  <criglerj@acm.org>).
	+ small fix to allow sccsfilt.l to build with flex 2.4, which did not
	  define YYSTATE (on FreeBSD 2.1.5).

 20000627 (m)
	+ small fix for doc/macros.doc (Clark Morgan).
	+ initialize $xshell-flags to empty string since xshell.sh does not
	  accept a "-c" parameter.
	+ modify manpage.rc to unset the filename associated with the buffer so
	  it does not display.  This ensures that the ruler is always visible.
	+ add command unset-variable, which resets the given variable to a
	  null or default value.  This is useful only for the $-variables,
	  since modes require a value.
	+ modify color support in xvile to allow the pre-8.3s color scheme as a
	  special case:  setting bcolor to fcolor makes xvile use the bcolorN
	  resources on syntax-highlighted text rather than the color selected
	  by bcolor (which is actually taken from the fcolorN resource in this
	  case).  This uses a new function get_color_gc() to simplify caching
	  of GC's (report by Dave Turner <turner@ameslab.gov>)
	+ remove some logic from x_fcol() from 8.3s (990914) which mirrored
	  x_bcol().  That broke the behavior of "set fcolor" (noted while
	  investigating Dave Turner's report).
	+ adjust filters/mk-0th.awk to work with SGI's nawk.
	+ fix typo in configure macro CF_CHECK_ERRNO (reported by John Coyne
	  <John.Coyne@ctbto.org>).
	+ translate soft hyphens to '-' in manfilt.c
	+ treat leading (unary) backslash in perlfilt.l as an operator, not
	  as an escape.
	+ add makefile dependency so "make vile" works when --with-builtin-filters is
	  used.

 20000617 (l)
	+ updates to config.guess and config.sub (patch by Kevin Buettner,
	  and resync with version from PCRE 3.2).
	+ update ftp and web-site pointers to reflect demise of ClarkNet
	  (reminder by Clark Morgan).
	+ use new function search_mode_list() to make binary search of the
	  my_mode_list[] array, to make it faster, since strcmp calls when
	  searching this array were the largest component in initializing
	  majormodes.
	+ correct length computation in finderr.c for %F token, which caused
	  heap corruption on win32 (cf: 9.1d).
	+ use $majormode rather than file suffix in manpage.rc to check for
	  HTML files, since the suffix is too easily confused by double-dot
	  suffixes.

 20000609 (k)
	> Tom Dickey:
	+ add command attribute-directly, to invoke internal filter on the
	  current buffer.  External files are still used for the keywords, but
	  this can eliminate the subprocess and pipes for filters that are
	  built-in.
	+ add built-in function &filter, to tell if the given majormode has
	  a built-in filter.
	+ show majormode ordering in the subheaders of show-majormodes.
	+ rewrite put_majormode_after() and put_majormode_before(), fixing
	  a potential infinite loop.
	+ modify manpage.rc to use lynx to render html files.  This uses the
	  development version of lynx (2.8.4dev.3, with the -stdin and
	  -with_backspaces options).
	+ check timode suffixes before shmode.

 20000529 (j)
	> Tom Dickey:
	+ fixes to make shell commands work properly with curses.c driver:
	  remove unneeded term.kclose from one version of ttunclean
	+ allow whitespace after '<<' that begins here-document in perl filter.
	+ modify suffix qualifiers for shmode and vilemode to make most dot
	  files that end in "rc" in shmode, unless the filename contains the
	  string "vile".
	+ add error-checks for init_pair() calls in curses.c (bug report by
	  Brendan O'Dea).

 20000519 (i)
	> Tom Dickey:
	+ use $cmd-count in AlignToCol to align more than one line at the
	  cursor's column.
	+ modify logic of $cmd-count to increment only for the topmost level
	  of dobuf() nesting.
	+ update ifdef's for building with SMALLER defined.
	+ add key binding for select mode, use that rather than insert mode
	  binding.
	+ correct parameter of bkgdset() in curses.c for Solaris curses.

 20000517 (h)
	> Tom Dickey:
	+ add key binding functions for insert-mode and command-mode, making it
	  simpler to bind a space or tab to a given function without having it
	  confused for a function while in insert mode.  New commands:
	  bind-cmdmode-key, bind-insmode-key, describe-cmdmode-bindings,
	  describe-cmdmode-key, describe-insmode-bindings,
	  describe-insmode-key, rebind-cmdmode-key, rebind-insmode-key,
	  unbind-cmdmode-key and unbind-insmode-key.  (fixes problems
	  introduced in 9.1, reported by George Eccles and Sean Ahern)
	+ implement a curses/ncurses terminal driver.  Use --with-screen=curses
	  or --with-screen=ncurses to configure this.  No mouse is supported
	  in this configuration.  This version builds only with SVr4 curses
	  or ncurses.
	+ accept -i option as an alias for -I, which has the added benefit of
	  allowing vile to be used as a $SHELL value for script, since that
	  passes a -i option to the "shell".
	+ change logic of dobuf() to implement the repeat-count there, rather
	  than the callers.
	+ add variable $cmd-count, which tracks the number of times a macro is
	  repeated by prefixing it with a repeat-count.

 20000501 (g)
	> Brendan O'Dea:
	+ prefix the "source ~/.vilerc" in vile-pager with "~force" in case
	  a user has no such file.
	> Tom Dickey:
	+ add macros/shifts.rc, which implements left/right shifting of words
	  in the current line to align with the cursor.
	+ reset DOT.o after calling deltoeol() in lrepltext().  This fixes a
	  problem with setting $line; the reinserted newline would fall after
	  the first character of the following line.
	+ save/restore window traits, setting DOT to the end of [Trace] when
	  writing into it with tprintf().  Otherwise tracing was writing at
	  the current location, and the buffer would scroll as data was written.
	+ two fixes for vile_op(): correct parameter for no_such_function()
	  when processing a macro, and consistently use f_godotplus to handle
	  missing or unknown motion parameters in a macro.
	+ set/clear reading_msg_line in pressreturn() to avoid autocolor
	  repainting the screen just after a shell command.
	+ add color-ls.rc, example using improved manfilt.c to display color
	  ls output in a buffer.
	+ improve decoding of ANSI escape sequences in manfilt.c, including
	  parsing of foreground colors.
	+ add $xshell-flags variable to allow customising $xshell (request by
	  Ian Jamison).
	+ remove $(LIBS) from filters/makefile.in to fix linking problem on
	  Debian.  The alternative is to add $(X_LIBS), which seems unneeded
	  for ecrypt.c and manfilt.c, which use only standard C library
	  functions.

 20000425 (f)
	> Brendan O'Dea:
	+ fix unquoted '^' character from 9.1e configure script changes.
	+ mods to build with Perl 5.6.0, which now requires that all perl
	  globals need a PL_ prefix (which affects `errgv', `na' and `sv_undef'
	  in perl.xs/ptypemap).  The change is backward compatible to 5.005 and
	  *should* be to 5.004 (untested).
	> Clark Morgan:
	+ modify joinregion() to refrain from modifying an empty region, i.e.,
	  where the start/end lines are the same.
	> Tom Dickey:
	+ add reset-rgb-palette command for winvile.
	+ add set-rgb-palette command for winvile (adapted from a patch by Ian
	  Jamison <IJamison@iss-dsp.com>).
	+ install Vileserv.pm without executable permissions (reported and
	  suggested solution by Brendan O'Dea).
	+ change an "ls -1" to "find" in configure script, to work around
	  nonportability to SVr3 (reported by Brendan O'Dea).
	+ add :g! and :v! as synonyms for :v and :g, respectively.
	+ modify bat-filt.l to highlight variables that are set or used in
	  a script.  also, highlight quoted strings.
	+ fix double-quotes with continuation lines in esqlfilt.l
	+ corrected wildcard patterns for dos/win32 in vileinit.rc
	+ add '#' to URL patterns in syntax filters.
	+ implement abbreviations for syntax keywords, using '*' as the
	  default delimiter.
	+ add vimmode, for vim syntax files
	+ implement $filename-ic, to use in filters.rc to avoid matching
	  xresmode for systems that have case-independent matching for
	  filenames.
	+ make configure macros that search for header- and library-paths a
	  little more general, e.g., searching under /usr/foo/lib or $HOME/foo,
	  from tin updates (CF_FIND_LIBRARY, CF_HEADER_PATH, CF_LIBRARY_PATH,
	  CF_NCURSES_LIBS).
	+ update config.guess, config.sub
	+ add a 'depend' rule to makefile.in
	+ update ne*.h rules in makefile.blc

 20000318 (e)
	> Tom Dickey:
	+ add configure --with-builtin-filters option.  This is only to test
	  the build scripts; the builtin filters are stubs.
	+ add cindent to awkmode.
	+ correct awk-filt.l - it did not echo curly braces.
	+ add '^' at beginning of pattern for hgrep in finderr.c
	+ correct index for W_FILE in finderr.c for %F token, omitted in
	  changes for 9.1d (reported by Clark Morgan).

 20000314 (d)
	+ Brendan O'Dea:
	+ modify perl.xs to allow perl operators to be used with a range.  Also
	  clears the VIEWOK flag for operators.
	> Clark Morgan:
	+ winvile:  turn off cursor during menu-based cut/delete/paste ops
	  (avoid stray cursor glyphs).
	+ winvile:  fix repaint bug that was introduced when "fixing" the
	  occluded notepad update bug in 9.1a.
	+ fix winvile ":sh" command, which used to pop up a separate window,
	  but does not as of 9.1 In 9.1, ":sh" on a win32 host is executed as
	  "$shell {-c|/c} $shell" .  As it turns out, cmd.exe's intrepretation
	  of the /c switch is to run the specified command and exit
	  immediately.  The fix is to simply launch $shell via CreateProcess().
	> Tom Dickey:
	+ modify SetVarValue() to make it handle mode values, which were being
	  ignored.  This makes
		~local report
	  work properly (reported by Clark Morgan).
	+ add variable $filename-expr, to specify the actual pattern used for
	  %F in [Error Expressions].  On DOS and Win32, this is initialized to
	  a more complex pattern, to accommodate drive letters.
	+ allow invisible buffers such as [Trace] to be the error-buffer.
	+ add macro command "~trace", which sets or reports the value of the
	  $debug variable.
	+ modify treatment of $debug to trace into internal buffer [Trace].
	+ fix ifdef's in btree.c to disable assert's when not debugging.
	+ improve sqlmode preamble, making it more distinct from batmode.
	+ improve cshmode complex fence patterns for foreach and switch.
	+ revert the change to ffgetline().  For some reason, fread() runs more
	  slowly when vile is rendering a manpage than fgetc().  Change all
	  fgetc() and fputc() calls to getc() and putc(), since as macros they
	  generally will run faster than the functions, as noted by Clark
	  Morgan.
	+ correction to 9.1c's change for shpreamble: it omitted a '?' (0/1)
	  around the options pattern.

 20000228 (c)
	> Clark Morgan:
	+ added cut-to-clipboard (windows Cut) and delete-text-selection
	  (windows Delete) to [win]vile.  The former is bound to Shift+Delete,
	  the latter to Alt+Delete.  Both commands require a current text
	  selection.
	+ bug fix:  winvile geometry only shown when window is resized :-).
	  Prior to bug fix, geometry also shown during a window move.
	+ added a winvile `about' box (available from the System Menu).
	+ winvile's right mouse menu includes these new commands:
	    cmd name  bound to                        txt slctn  txt slctn must
						         rqd?    be in curbuf?
	    --------  --------                        ---------  -------------
	    undo      undo-changes-backward
	    redo      redo-changes-forward
	    cut       cut-to-clipboard                    X           X
	    copy      copy-unnamed-reg-to-clipboard       X
	    paste     paste-from-clipboard
	    delete    delete-text-selection               X           X
	  All but undo and redo are context sensitive.
	+ documented that ~local doesn't save/restore mode vars (this is an
	  assumption on my part).
	+ beefed up example vile.rc with more macros and removed outdated
	  color syntax macro.
	+ optimize ffgetline(), buffering data read from fread() rather than
	  via fgetc().
	+ add to vile.hlp more information about installing vile, particularly
	  the effect of $VILE_STARTUP_PATH and $VILE_LIBDIR_PATH
	+ fix a redundant screen repaint for this scenario with the termcap
	  configuration:
		$ vile /etc/termcap
		:stop
		$ fg %1
	> Tom Dickey:
	+ converted most occurrences of yyout in the filters to calls into
	  filterio.c that do not specify a FILE*.
	+ split-out main program and I/O from filters.c as filterio.c
	+ modify filters.c to avoid concatenating $HOMEDRIVE when $HOME already
	  specifies the device in home_dir() (reported by Richard Hussong
	  <rhussong@ma.ultranet.com>).
	+ further narrow the scope of insert-exec by excluding all whitespace,
	  to avoid interpreting tab and formfeed.
	+ add mode insert-exec to control logic in ins_any_time() which
	  interprets control characters which are bound to GOAL or MOTION
	  commands rather than inserting them without quoting (see 9.0a and
	  9.0b changes).  This restores the default behavior, since some users
	  had control characters bound to a function which was then executed
	  (reported by George Eccles and Christian Lindig).
	+ modify which-source and which-exec to always show the places where
	  vile searches, even if not found (suggested by Clark Morgan).
	+ modify shmode prefix pattern to allow "-" alone as an option, rather
	  than requiring it to be followed by a letter.  This is done in
	  Linux's MAKEDEV script.  Also, corrected parenthesis in the pattern
	  to make a ":" line recognized as a shell comment.
	+ correct logic for &left and &middle functions, which returned one too
	  many characters after 8.3d changes to use TBUFF's (reported by
	  (William Yuan <yuan@bucket.its.unimelb.edu.au>)
	+ correct modetbl entry for &sless function, which was returning a
	  string rather than a boolean (this was broken between 8.2 and 8.3).
	+ add a check for the base parameter of mk_to_vcol(), in case it is
	  negative (reported by Clark Morgan).

 20000210 (b)
	> Kevin Buettner:
	+ x11.c (x_preparse_args): Set window manager resize hints.
	  (x_configure_window): Removed code for setting window manager
	  resize hints.  Also added code to avoid BadMatch errors
	  when window is too small.
	> Paul Fox:
	+ implement a new mode, "unique-buffers", which does dev/inode checking
	  to be sure files aren't edited more than once.  this differs from
	  "resolve-links" in that a) the "true" filename may never be
	  discovered -- vile will use the first name its given for a given
	  file, b) it detects hard links, and c) it's a lot faster.
	+ shorten the confirmation questions/messages that result from modtime
	  checking.  with very long buffernames the current messages extend
	  past the 80 column boundary, making the tail end of the question
	  invisible in some cases.
	> Clark Morgan:
	+ add a pin-tagstack mode, which prevents the editor from switching
	  windows during a tag/push operation (i.e., all tag ops are pinned to
	  the current window).  By default, this mode is not enabled, which
	  ensures backward compatibility with previous editor behavior.
	+ modify ntwinio.c to continuously show the geometry during a resize.
	+ ifdef'd use of auto_set_title to compile x11.c on VMS.
	+ update README.PC's description of vile search-paths.
	> Tom Dickey:
	+ annotate the verbose form of which-source and which-exec, showing
	  the corresponding variable for each path which is tested, e.g.,
	  "$PATH" when checking items in $PATH.
	+ add $exec-path variable
	+ modify filter modules so they export only one variable (filter_def)
	  to simplify building a library for built-in filters.
	+ change ntscroll() to use RedrawWindow() to repaint the update-region
	  after ScrollWindowEx() - works no worse on my home machine, will
	  re-test at work: the problem to fix is incorrectly-shifted text when
	  scrolling via repeat-keying j/k.
	+ change position (^G) command to show "File is empty" if the current
	  buffer is empty, rather than "Line 1 of 0 ..." (reported by Clark
	  Morgan).
	+ correct char_no() function to use record-separator length, so
	  $curchar is evaluated properly for dos files (reported by Clark
	  Morgan, for ^G command).

 20000130 (a)
	> Kevin Buettner:
	+ gdb.pm:  New file.  Runs gdb in a vile window and tracks changes in
	  editor.  (Must be used with shell.pm.)
	+ shell.pm (terminal_emulation): Fixed bug which was preventing
	  ESC [ Pn B from moving down lines.
	  (shell, clean_resume_sub): Improve workaround for perl crasher.
	  (dead): Fetch parameters.
	+ estruct.h (OPT_LINE_ATTRS): Define.
	  (LINE): Added new member l_attrs.
	  (LINE_ATTR_ENTRY): New structure typedef.
	+ edef.h (line_attr_tbl): Hash table for line-based attributes.
	+ proto.h (lattr_shift): New function.
	+ select.c (lattr_shift, free_line_attribs, add_line_attrib,
	  purge_line_attribs, init_line_attr_tbl, find_line_attr_idx):  New
	  functions which implement the guts of the new line-based attribution
	  mechanism.
	  (free_attribs): Call free_line_attribs().
	  (attributeregion):  Call add_line_attrib() and purge_line_attribs()
	  as appropriate.  Also reindented this function.  [I thought I was
	  going to have to make more extensive modifications than I did.]
	+ file.c (quickreadf): Initialize l_attrs.
	+ line.c (lalloc): Likewise.
	  (linsert, ldelete): Call lattr_shift() to adjust l_attrs.
	  (ltextfree, lnewline, ldelnewline): Free (and null) l_attrs.
	+ undo.c (lineundo, repointstuff): Likewise.
	+ api.c (lreplace): Likewise.
	+ display.c (updattrs):  Call updlineattrs().  Also split out code into
	  which sets the attributes in vscreen into...
	  (mergeattr): New function.
	  (updlineattrs): New function which decodes attributes associated
	  with the l_attr member of the LINE structure.
	+ makefile.in (gdb.pm): New perl file to install.
	+ select.c (attributeregion, add_line_attrib): Fix bugs preventing
	  hypertext commands from working.
	+ display.c (updlineattrs): Stop processing attributes if end of
	  buffer is reached.
	> Clark Morgan:
	+ fix the winvile repaint bug that I reported last week.  Problem was
	  caused by code in ntscroll() that was clearing 95% of the ClientRect
	  after the scroll operation.  I would never have figured this out
	  except by looking at traces generated by the extremely useful TRACE
	  facility (I find it impossible to debug paint problems using a local
	  debugger).
	+ additionally, unhandled/ignored scrollbar messages don't trigger an
	  update(), thus precluding two updates for each scrollbar operation
	  (e.g., one update for SB_LINEUP, followed immediately by another
	  update for SB_ENDSCROLL).
	+ implementation of term.typahead for ntwinio.c
	+ remove apparently unused kbhit and khit functionality. in ntwinio.c
	  (amended by Russ Schnapp).
	+ clarify build instructions for win32+perl configuration in README.PC
	  (from report by Russ Schnapp <rschnapp@ACM.org>).
	+ documented some of the new 9.1 features (which included adding a new
	  Debugging section)
	+ fixed some typos in vile.hlp
	+ expanded/corrected some old features in vile.hlp
	+ integrated "Command files" topic a bit more with "Invocation" topic
	  and streamlined the latter in vile.hlp
	+ used more precise wording in Credits (which triggered a large change).
	+ update buglist to reflect vms_ffexists() changes.
	+ fix bogus comment in w32reg.c
	+ win32 console vile now has "true" autoscroll support (this feature
	  based on Ed Henderson's work).
	+ win32 console vile's mouse-based text selection (via LMB) modified to
	  fairly closely mirror winvile's features, except that a single click
	  does not clear the current text selection (a la notepad).  The most
	  significant change is that text selection is not initiated until the
	  mouse has moved at least one character cell in either the X or Y
	  coordinate.  This change precludes the editor from discarding the
	  contents of the unnamed register due to a simple mouse click, as
	  opposed to an actual mouse move.
	+ fix:  If the user releases the left mouse button (LMB) outside
	  winvile's main window following an autoscroll operation, no text is
	  copied to the unnamed register.
	  This patch doesn't yank to the unnamed register if the user resizes a
	  window via a mode line drag.  In addition, this patch fixes another
	  problem:  if the mouse cursor is moved to the message line and then
	  LMB is held down, autoscroll starts in the current window _and_
	  cursor glyphs are dropped in same during the scrolling.
	+ document $error-buffer in macros.doc
	+ update README for 9.1 release.
	> Tom Dickey
	+ modify which-source, which-exec to be consistent with other commands
	  that use the existence of a repeat count as a flag, not whether it
	  it bigger than one (reported by Clark Morgan).
	+ modify filters, eliminating write_string() function which
	  accommodated pre-9.1 restriction of vile for completing each
	  attribute on one line.  Now, filters attribute multi-line regions
	  when appropriate, e.g., multi-line comments in C.
	+ correct a typo in txtmode's suffix qualifier for ChangeLog.

Changes for vile 9.1 (released Sat Jan 15 2000)

 20000115 (t)
	+ Clark Morgan:
	+ fix a file-descriptor leak in win32 pipes.
	> Tom Dickey:
	+ small compiler warnings (using 'antic' and SGI's lint)

 20000114 (s)
	> Kevin Buettner:
	+ perl.xs (do_perl_cmd):  Partially revert changes from 9.0p regarding
	  the clexec/isnamedcmd/no_msgs flags.  We (once again) set isnamedcmd
	  to TRUE in order to cause mlreply_dir and mlreply_file to prompt the
	  user when a perl command is invoked via a key binding.
	  (mlreply_no_opts): Remove.
	  (mlreply): Make mlreply_no_opts and mlreply_shell aliases with
	  slightly different functionality.
	+ perl/capture.pm:
	  + New documentation.
	  + New command, async-capture-command, for displaying
	    the documentation.
	  + Use mlreply_shell in order to provide the appropriate shell
	    completions.  [Requested by Paul Fox.]
	  + Remember last command run.  [Also requested by Paul Fox.]
	  + Added work-around to prevent [Buffer not found] message from
	    displaying when Vile::Buffer::edit is asked to find an internal
	    buffer.  (Does getfile2bp really need to call mlforce() to print
	    this message out?)
	+ perl/shell.pm:
	  + New documentation.
	  + New command, shell-help, for displaying the documentation.
	  + Handle partial (incomplete) terminal control sequences.
	    [Fixes bugs reported by Paul Fox.]
	  + gdb annotation support.  (Use --fullname with gdb to make
	    use of this.)
	  + Facilities for supporting upcoming gdb.pm.
	  + Revise mechanism for escaping from shell.  (Expect it to
	    be revised even more though.)
	> Clark Morgan:
	+ modify mailmode to support mutt's temporary file names
	+ modify nttypahead() to exit immediately during an autocolor operation.
	+ add section on 'Color Basics' to vile.hlp, integrated/revised with
	  description of color syntax highlighting (with feedback from Brendan
	  O'Dea and Paul Fox).
	> Tom Dickey:
	+ modify suffix qualifiers of cshmode and mailmode to avoid matching
	  directory names.
	+ corrected status checks on return from prompt_scheme_name(), which
	  may be ABORT (reported by Paul Fox).

 20000112 (r)
	> Kevin Buettner:
	+ correct two variables in perl.xs which were incorrectly typed as
	  'int', and passed by reference which is a problem on Tru64 Unix 5.0
	  (Alpha) where the prototype specified 'unsigned long' (reported by
	  Larry Gensch <larry.gensch@compaq.com>)
	> Clark Morgan:
	+ update credits in vile.hlp (with additions from Paul Fox).
	+ updated w32modes.doc
	+ remove very stale documentation/comment from c-filt.c .
	+ add -q switch to filters.c, which forces the filter to exit as soon
	  as it reads its first line of input.  Useful in conjunction with -v
	  and -vv switches.  Necessary for Unix vile (but not win32 vile) if
	  you want to do this:
	      ^X-!~/.vile/vile-c-filt -vvq
	  without hanging the editor's keyboard and forcing the user to type ^C
	  to kill the child process.
	+ fix a 250 millisecond dead spot built into the winvile autoscrolling
	  computations, and also throttle back the initial rate of scrolling so
	  that the user has a chance to read the text as it moves up/down the
	  screen.
	+ reword/correct the description of searching for .keywords files in
	  doc/filters.doc
	> Tom Dickey:
	+ modify ins_anytime(), allowing undoable commands to be executed
	  within an insertion (Clark Morgan stated that the winvile
	  paste-from-clipboard used to work in insertion mode).
	+ correct logic of gotoeosent(), which would skip past the end of the
	  current sentence (which ended at the end of a line), over following
	  blank lines, to the end of the next text line.  Now it skips into the
	  beginning of the first line following the sentence.  A following call
	  will skip the blank lines to the beginning of the next text line
	  (reported by Clark Morgan).
	+ add README*, CHANGES*, ChangeLog* and COPYING to txtmode suffix
	  qualifier.
	+ modify makefilt.l to flag as an error lines that start a quote but
	  do not end it.  Some make programs allow this.
	+ modify suffix qualifiers for imake, mail, make, vile majormodes to ensure
	  they do not match directory names such as /mail/.
	+ modify directive_arg_eval() to expand "~/" expressions for non-UNIX
	  systems, making "so ~/vile.rc" work within a source'd file on WinNT
	  (reported by Clark Morgan).
	+ modify install rule for Vileserv.pm to ensure we update the path
	  of the perl program embedded in that script.
	+ modify vileperl.rc so the terminfo/termcap version does not start
	  the edit-server.
	+ add a null-pointer check for wp in AutoScroll().
	+ modify previndent() to refrain from copying previous indent over a
	  line beginning with '#' if cindent is disabled (reported by Clark
	  Morgan).
	+ change show-colors command to reflect limited number of colors if
	  $ncolors is set to 2, 8 or 16.
	+ modify set_colors() to allow initializing to white/black if termcap
	  or terminfo has no color specified.  This makes the list shown for
	  visual-matches limited to the available colors (reported by Clark
	  Morgan).

 20000109 (q)
	> Ed Henderson <evhendrs@micron.net>:
	+ implement autoscrolling feature for winvile, which makes the buffer
	  scroll in the direction where the mouse leaves the window,
	  automatically extending selection highlighting.
	+ make the scroll speed increase over time, rather than distance
	  above/below the window (suggested by Clark Morgan).
	> Clark Morgan:
	+ fix build with dbg=1 for winvile (reported by Ed Henderson).
	+ update doc/modes.doc, using ~with to simplify perlmode example, and
	  adding cindent to cmode description.
	> Brendan O'Dea:
	+ back out change that attempted to make the .pl files use "#!/bin/echo"
	  to work around a warning from the Debian package checker - but it now
	  adds a different warning.
	> Tom Dickey:
	+ modify configure --with-xpm option to allow builder to specify path
	  of Xpm library in the configure --with-xpm option (adapted from patch
	  by Albert Chin-A-Young <china@thewrittenword.com>).
	+ modify sh-filt.c to mark ':' lines as Action (should be ':'
	  statements, but we do not parse statements yet).
	+ modify key-filt.c to show color codes in Action color rather than
	  Literal, to make it simpler to distinguish special constants such
	  as m4's LeftQuote.
	+ document show-colors and show-color-schemes in vile.hlp
	+ modify the [Color Palette] buffer created by show-colors to make it
	  clearer that the internal codes used in the syntax filters are a
	  single hexadecimal digit (suggested by Clark Morgan).
	+ comment-out the perlmode "while" group, since perl's ambiguities make
	  it not very useful.  Retained the default (if) group, since there are
	  usually more if/elsif/else statements than the others (feedback from
	  Kevin Buettner).
	+ add table entries to tcap.c for terminfo italic mode (sitm/ritm),
	  with terminfo's termcap equivalences (ZH/ZR).  If not found, we
	  continue to fallback to underlining.

 20000104 (p)
	> Kevin Buettner:
	+ window.c (push_fake_win, pop_fake_win): Set curbp.
	+ api.c, select.c:  Change callers of push_fake_win and pop_fake_win to
	  not set curbp.  Actually, it wouldn't hurt, but you'd have to be
	  careful to make sure the setting and restoring is done in the proper
	  order.  [Fixes bug reported by Clark Morgan in which only one dirty
	  window would get colored at a time.]
	+ perl.xs: Minor doc fixes.
	> Clark Morgan:
	+ implement autocolor for win32 console and GUI.
	+ fix some stale doc in doc/macros.doc
	+ fix compiler warnings in ntwinio.c
	> Brendan O'Dea:
	+ remove the clexec/isnamedcmd/no_msgs tweaking in perl.xs for perl
	  commands.  These flags were changed to allow mlreply* to work
	  interactively when perl subs such as hgrep were called from a wrapper
	  macro, although this makes using a registered perl extension
	  non-interactively impossible.
	> Tom Dickey:
	+ minor correction to perl filter, special cases of backslashing to
	  handle perl5's MM_Win32.pm, which incidentally contains a syntax
	  error right after "UNINSTALL =".
	+ modify DrawMenuBar() to use HWND parameter rather than HMENU, as
	  documented (reported by Rick Sladkey).
	+ correct a couple of missing characters after backslashes in perl and
	  sql modes (reported by Kevin Buettner).
	+ add pattern to finderr.c for SGI 7.3 SGI MIPSpro 7.3 compilers (from
	  Anton Koning <anton@sara.nl>).
	+ minor keyword additions for C and Java.

 20000104 (o)
	> Kevin Buettner:
	+ modify updattrs() and offs2col() to fix an extra highlighted
	  character at the end of the line.
	+ add a check to update() to ensure the current window is visible,
	  fixes a case where autocoloring would pick up a buffer with negativa
	  row value (reported by Clark Morgan).
	> Brendan O'Dea:
	+ uncomment line in directory.pm which keeps vile's $cwd variable
	  updated, so hypertext links will work better.
	+ remove doc/hilite.doc, since the corresponding script is gone.
	> Clark Morgan:
	+ miscellaneous updates to vile.hlp
	> Tom Dickey:
	+ fix a null-pointer reference in make_current() (reported by Clark
	  Morgan).
	+ modify autocolor() to refrain from coloring buffers that are not
	  associated with a majormode, e.g., [Buffer List] (reported by
	  Clark Morgan).
	+ minor optimization of offs2col(), moved expressions out of loop.
	+ set/clear 'reading_msg_line' in mlyesno() and mlquickask() to make
	  them behave more like mlreply().  This prevents autocolor from wiping
	  out the highlighting set by substitutions such as
		:%s/pat/replacement/gc
	  (reported by Kevin Buettner).

 20000102 (n)
	> Kevin Buettner:
	+ perl/shell.pm:  Better terminal emulation; several bugs fixed.
	+ perl.xs (do_perl_cmd):  Make sure that curwp is visible on the way
	  out.
	> Brendan O'Dea:
	+ improve Manual.pm, getting highlighting as perldoc does, using nroff
	  and vile-manfilt.
	+ corrections to 9.0m changes to make directory.pm and dirlist.pm work
	  on win32 (comparison for $os was not against proper types, besides
	  Perl has $^O to identify the operating system)
	> Tom Dickey:
	+ modify xvile so that if the -title option is given, xvile will not
	  automatically set the window's title.  Setting $title explicitly will
	  still work (reported by Eric Krohn).
	+ correct usage-message for xvile's options, i.e., -title is used
	  rather than -wm and -T option is used to specify a tag.

 (kev) 991231 (m)
	+ doc/macros.doc, macros/vileperl.rc, perl.xs, vile.hlp:  Fix hgrep
	  references; hgrep.pl is now hgrep.pm.  Also, fixed usage examples.
	+ makefile.in:  Added perl modules Glob2re.pm, Vile/Manual.pm,
	  Visit.pm, dirlist.pm.  Removed glob2re.pl and visit.pl.
	+ perl/Glob2re.pm, perl/Visit.pm:  Renamed and revised from the .pl
	  versions.
	+ perl/glob2re.pl, perl/visit.pl: Removed these files.
	+ perl/Vile/Manual.pm: New file for displaying embedded POD
	  documentation.
	+ perl/dirlist.pm:  New file; creates a flat hierarchical directory
	  listing.
	+ perl/hgrep.pm:  Moved introductory comments to end of file and
	  rewrote in POD format.  Added binding hgrep-help which will display
	  the POD documenation.  Fixed problem with backslashes in the buffer
	  name given to the error-buffer command.
	+ perl.xs:
	  + (newVBrv):  Revert change in "l" which was supposed to prevent
	    circular structure from being created.
	  + (perl_free_handle):  Instead, break circular structure here so
	    handle will get freed properly.  [Analysis by Brendan O'Dea.]
	> Brendan O'Dea:
	+ Vileserv now also works for vile.
	+ registration commands are a bit more efficient when the module is
	  already loaded.
	+ hgrep now sets error-buffer internally.
	+ add perl "use capture".
	> Tom Dickey:
	+ modify Vile::get() method to accept functions, used to replace use
	  of `pwd` in perl scripts to make them portable to win32 [Brendan
	  O'Dea points out that there is Cwd.pm for this sort of thing].
	+ modify directory.pm and dirlist.pm to make them work on win32, i.e.,
	  by not executing portions that will not work (such as mime types) and
	  using vile's builtin functions to workaround deficiencies in perl.
	+ add check in vileperl.rc to avoid registering scripts that will not
	  work on win32.

 (tom) 991229 (l)
	+ save/restore selection highlighting in attribute-from-filter, so that
	  autocolor does not clear the current selection.
	+ add OS/2 EMX to list of platforms that must open text files in binary
	  mode, to see trailing carriage-returns on a line in vileinit.rc
	+ modify makefile.wnt to copy the .rc files to $VILE_STARTUP_PATH
	  during build, as the Perl files already were.
	+ update makefile.wnt to install renamed/new Perl scripts
	+ modify tc-filt.l to flag as an error an unescaped newline within
	  a description.
	+ modify c-filt.c to flag as an error a multi-line literal which is
	  missing a backslashed newline.  This is allowed by gcc, but the
	  C standard is explicit.
	+ modify c-filt.c to not treat a line beginning with a '#' if the
	  previous line ended with a backslash.  This is needed to not flag as
	  an error tokens in a macro which are quoted with '#'.
	+ update vileperl.rc to work with Brendan's renaming/simplification.
	> Paul Fox:
	+ add cc and reply-to to the list of recognized mail headers, and makes
	  them all caseless.
	+ also added '+' as a valid character in email names, since more and
	  more people are using the user+foo style convention mail sorting.
	> Kevin Buettner:
	+ buffer.c (killbuffer):  When attempting to free more than one buffer
	  by use of a glob expression, don't use recently freed memory after a
	  buffer kill to obtain the next buffer to check.
	+ perl/hgrep.pl:  Change "rgrep" to "hgrep".  Also, don't allow buffer
	  to be autocolor'd.
	+ perl.xs (PDEBUG):  Added/revised code for debugging reference counts.
	  + (newVBrv):  Pass NULL for the obj (second) parameter to sv_magic().
	    This prevents a circular structure from being created which was
	    quite difficult for Perl to free properly.  (newVBrv):  Removed
	    extraneous calls to SvREFCNT_inc().  [Analysis by Brendan O'Dea.]
	  + (do_perl_cmd, svcurbuf_set):  Don't use sv_2mortal() on the new SV
	    passed to newVBrv().  Instead, explicitly call SvREFCNT_dec() on it
	    after svcurbuf assignment.  [Analysis by Brendan O'Dea.]
	  + (do_perl_cmd):  Instead of doing an explicit SvREFCNT_dec() on
	    svcurbuf, assign undef to this variable.  This will still decrement
	    the reference count.  I think this is the reason we needed the
	    extra SvREFCNT_inc() statements.  We would decrement the reference
	    count here without also removing the reference.  As a result, when
	    svcurbuf was assigned to again, the reference count was decremented
	    again on the thing being replaced.
	+ makefile.in: Look for perl .pm files in the perl subdirectory.
	+ hgrep.pl: Set up the error finder.
	> Brendan O'Dea:
	+ Deletes hilight.pl, manfilt.pl, syntax.pl and tailf.pl.
	+ rename most .pl files to .pm (makefile.in).
	+ add an Exporter-like mechanism to Perl5 interface, although instead
	  of exposing a module's functions to the caller, it exposes them to
	  vile as registered commands.  By renaming the extensions as `.pm',
	  and making some minor changes to use Vile::Exporter, an extension
	  becomes visible by simply adding:
		  use extension;
	  to vileinit.pl.  There is also provision for only including some
	  commands provided by the extension, and for overriding the keybinding
	  defined by the developer (documented in the attached module).
	  Of course you can still say:
		   require extension;
	  and do the registering yourself if you so choose.

 (tom) 991226 (k)
	+ disable autocolor in manpage.rc macros, which have txtmode set.
	+ suppress autocolor when 'working...' message is active.
	+ modify filters.c to always initialize predefined classes whenever
	  a symbol table is created.  It was done before only for the first
	  symbol table, which meant that some filters using multiple symbol
	  tables were not able to use class names for keyword attributes.
	+ change cpp.key's inclusion of c.key to ".include" to avoid forcing
	  cweb filter, which includes cpp.key, to keep track of C and C++
	  tables.
	+ split-out cweb.key, install vile-cweb-filt
	+ add syntax filter for embedded SQL (esqlfilt.l)
	+ add syntax filter for REXX (rexxfilt.l)
	+ minor fix to c-filt.l in write_number(): recognize "..." string.
	+ correct some missing .key files in the install rule for makefile.wnt
	+ correct some forward references from 9.0j (ntconio.c, ntwinio.c).

 (tom) 991224 (j)
	+ add cygwin to list of platforms that must open text files in binary
	  mode, to see trailing carriage-returns on a line in vileinit.rc
	+ restore Kevin's change to main.c, which calls term.close() within
	  tidy_exit() after perl_exit(), to ensure that ".vilesock" is removed.
	  At the same time, call ExitProgram() directly from newprocessgroup()
	  so that xvile does not exit prematurely when invoked w/o forking
	  (analysis by Kevin Buettner).
	+ more fixes for special case numbers in c-filt.c, e.g., ".1", "..1"
	  (err), "0x.p1" (err).
	+ implement special attribute code 'N' to allow users to disable syntax
	  highlighting for a given class.
	+ indent'd random.c
	+ indent'd ntconio.c and ntwinio.c, reordering some chunks to eliminate
	  forward-references.
	+ correct an off-by-one in repaint_window() from 9.0g changes that left
	  debris after an exposure event (ntwinio.c).
	+ add rules to makefile.wnt for compiling all filters, not merely those
	  which are normally installed.
	+ correct a minor formatting error in describe-bindings for command
	  names longer than 31 characters using new function quote_and_pad().
	+ change TRACE macro usage to put a ';' on the end, since it works
	  better that way with 'indent'.
	+ fix some places where K&R/unproto combination on SunOS could not
	  compile, e.g., aggregate initialization in bind.c, termio.c.
	> Kevin Buettner:
	+ buffer.c (swbuffer_lfl):  Set MK to nullmark.  Since we're switching
	  buffers here, we want to make sure that MK doesn't refer to a line in
	  a buffer different than curbp.  This fixes the "BUG:  hit buf end in
	  getregion" message that would frequently pop up when using the perl
	  facilities.
	+ perl.xs (set_curwp0):  New function.  Use this instead of set_curwp()
	  in many of the Vile::Window methods to prevent the buffer tracking
	  list from getting updated.  [Reported by Paul Fox.]
	+ random.c (autocolor):  Save/restore dotcmdactive.  This fixes the bug
	  with "." (repeat-last-cmd) in which an autocolor() call would shut
	  off the dot recording.  As a result, "." would replay some earlier
	  command than the one you thought you were repeating.

 (kev) 991222 (i)
	+ makefile.in (capture.pl, winops.pl): New files/targets.
	+ perl.xs (perl_exit): Clear perl_interp variable so that
	  we get out early if we're called twice.  This won't
	  presently happen, but we want to be prepared if it does.
	  (stringify_coderef):  Fixed situation in which the coderef
	  was getting pushed on @Vile::CRs twice -- and also
	  incrementing the reference count twice which was preventing
	  the code ref from being freed up.
	  (perl_free_deferred): New code to work around perl bug
	  in which parts of the coderef are getting freed too
	  early causing memory corruption.
	  (perl_free_callback):  Ditto.  Also added a comment
	  regarding a (now removed) call to SvREFCNT_dec() and why it
	  shouldn't be there.  Also, don't increment the reference
	  count on a newly created integer (newSViv).  It's already
	  incremented when allocated.
	+ proto.h (perl_free_deferred): Declared.
	  (perl_free_callback): Change return type.  This is so
	  that the GROW macro may be used to increase the size
	  of the vector of Sv's to deallocate in perl_free_deferred().
	+ api.c (api_command_cleanup): Call perl_free_deferred() in order
	  to work around perl bug.  I didn't ifdef it because we may
	  someday find some other deferred allocations which need to
	  be performed.
	+ main.c (quit): Don't shut down X11's display here.
	  (tidy_exit): Shut it down here instead.
	  Fixes bug reported by Sean Ahern in which .vilesock was
	  not getting removed properly.  Thanks also to Brendan
	  O'Dea for additional insight into the problem.
	+ npopen.c (pipe_pid2): New static variable.
	  (npclose): Wait on both pids associated with a filtering
	  operation.  This cleans up the zombies (and there were a lot
	  of them) associated with automatic syntax coloring.
	  (softfork): Set pipe_pid2 for callers who are too lazy
	  to remember the pid.  [Note: I consider this to be an
	  ugly hack.  Please feel free to improve upon it.]
	+ modetbl (loading): New mode.
	+ display.c (modeline_modes): Added code for "loading" mode.
	+ capture.pl: Some improvements:
	    + Error finder now hooked up
	    + [loading] message on modeline when loading a file
	    + New name for the binding: async-capture-command instead
	      of perl-capture-command
	    + New keybinding ^A-!.  Think of the ^A as "asynchronous".
	    + Prettier header
	    + Dot reset to top of new buffer contents if appropriate
	      (If you're browsing the buffer, it won't interfere with
	      your browsing.)
	    + Lots of new comments in the code
	+ watch.c (dowatchcallback):  Do not run watch callbacks when
	  user is typing on the message line.  (This cures a nasty
	  abort that I encountered while using async-capture-command.)
	> Tom Dickey:
	+ revert Kev's change to main.c - this made xvile not run when it
	  forks on startup.
	+ compiler warnings in x11.c (reported by Michael Finken
	  <finkenm@hotmail.com>)
	+ improve attribute_from_filter() by draining a pipe that has data;
	  if the filter program incorrectly sends more data than vile expects,
	  vile would not be able to close the pipe.
	+ correct check in c-filt.c from 9.0g for nested comments; it flagged
	  adjacent comments.
	+ modify m4-filt.c to test multi-line attributes by writing Literal's
	  as a single token rather than each piece split by lines.
	+ improve attribute-from-filter and attribute-cntl_a-sequences-til to
	  allow lengths beyond the end of the current line (Kevin & I were
	  aware of this - report by Christian Lindig <lindig@ips.cs.tu-bs.de>).
	+ modify c-filt.c to highlight C9X hexadecimal floating constants
	+ add new C9X keywords to c.key: inline, restrict, _Bool, _Complex,
	  _Imaginary, _Pragma, __STDC_VERSION__, __VA_ARGS__, __func__.
	+ correction to c-filt.c's parsing of floating-point constants (missed
	  a toupper).

 (kev) 991220 (h)
	+ perl/capture.pl: New perl script which implements a perl version
	  of capture-command.  This version incrementally updates the
	  window however.
	+ perl/winops.pl: New perl script which implements various window
	  related operations.  Good for testing implementation of the
	  Vile::Window API.
	+ perl.xs: Documentation fixes.
	  (package Vile::Window):  Documentation and implementation of
	  Vile::Window API.
	  (perl_free_callback): Disable deallocation of the coderef since
	  this causes problems when called from within the subroutine
	  being deallocated.  Added a FIXME comment noting the problem.
	  (set_selection, selection_buffer): Fixed croak messages.
	  (dotq): New Vile::Buffer method.
	+ api.c (api_dotinsert): Set changed flag.  This fixes a bug
	  where perl would add characters to the buffer, but they
	  wouldn't appear until the user did something else to force
	  a hard update.
	  (api_command_cleanup): Make sure results of unmark operation
	  get propagated back to the editor.
	+ api.h (VileWin): Declare.
	+ buffer.c (swbuffer_lfl): Don't call undispbuff() unless all
	  windows associated with the buffer are gone.
	+ estruct.h (WINDOW): Added w_id as a new field to this structure.
	+ window.c, proto.h (id2win, win2id, index2win, win2index):
	  New functions.
	+ window.c (w_id_next): New static global.
	  (FAKE_WINDOW_ID): New define.
	  (splitw, winit, push_fake_win): Set/initialize w_id field in
	  WINDOW structure.
	+ ptypemap (T_VileWin): New type in typemap.
	+ x11.c (x_autocolor_timeout): Send a null message to ourselves
	  to prevent stalling in the event loop.  This fixes the bug
	  in which a keypress while the filter was running would
	  cause the keypress to be noticed at the next X event.
	  (paste_from_primary): New function.
	+ cmdtbl (paste-from-primary): New command.  (Requested by Sean
	  Ahern.)

 (kev) 991219 (g)
	+ cmdtbl, buffer.c:  Added binding / support for ^X-_ aka
	  "historical-buffer-to-current-window".  [Requested by Mike J.  Bell.]
	+ random.c (autocolor):  Save/restore pre_op_dot.  Fixes bug reported
	  by Paul Fox:  "if autocoloring kicks in between an operation and the
	  motion that completes it (e.g.  'd' and 'w'), the operation acts on
	  the wrong selected region -- i think it acts on 'dot to top of
	  buffer'."
	+ improve set-window (actually swbuffer()) by initializing a window's
	  traits, e.g., position, from the buffer's traits.
	+ buffer.c (swbuffer_lfl):  Make sure window count gets decremented for
	  the window being replaced even if buffer we're replacing it with is
	  already on-screen (fixes a core dump in set-window, reported by Clark
	  Morgan).
	+ fileio.c (ffclose): Use mlwrite() instead of mlforce().
	+ edef.h (in_autocolor): New variable.
	+ display.c (mlerase, mlwrite):  Use in_autocolor to determine whether
	  or not to position the cursor on the message line.
	+ random.c (autocolor): Set autocolor as appropriate.
	+ macros/vileinit.rc, vile.hlp:  Revise so that autocolor timeouts are
	  in milliseconds.
	+ termio.c (ttgetc): Likewise.
	+ x11.c (x_start_autocolor_timer): Ditto.
	> Clark Morgan:
	+ ifdef'd autocolor mode and logic with OPT_COLOR to accommodate VMS,
	  which does not support syntax highlighting anyway.
	+ fix vmsbuild.com for the case of building xvile.exe with VAXC, adding
	  menu.obj to vms_link.opt _before_ the CRT.  That ensures that the
	  linker looks for menu.obj in the cwd, not in sys$library.
	> Tom Dickey:
	+ improve logic of repaint_window(), so it paints long chunks rather
	  than single characters.  This makes the screen paint properly when
	  switching to an Italic font.
	+ refine logic for gui_resize_in_progress in ntwinio.c so that it
	  only affects the case where a font-sizechange is in progress.
	  This restores the behavior of 8.3d, which allows a user to specify
	  $pagewid and $pagelen in vile.rc to control the initial screensize
	  (reported by George Young <gryoung@nortelnetworks.com>).
	+ add $brightness variable to winvile, allowing users to customize the
	  overall intensity of colors, to accommodate different monitors
	  (prompted by Chris Green <cgreen@x-1.net>).
	+ modify backspacelimit mode to allow backspacing through a newline
	  when nobackspacelimit is specified (request by Todd Moody
	  <tmoody@mailhost.sju.edu>).
	+ change Kevin's use of in_autocolor which suppresses message-output to
	  make that part of ~hidden behavior.
	+ remove elif/else clauses from m4mode "do" group, since they interfere
	  too much with balancing square brackets intermixed with parentheses.
	+ implement poll()-based watchfd/autocolor support.
	+ implement BeOS-specific watchfd/autocolor support, by rearranging
	  logic used for catnap(): beos_has_input(), beos_can_output() and
	  beos_napms().
	+ make repeat-count apply to @register commands.  This repeats the
	  entire command, and is not necessarily compatible with vi: some
	  implementations do not recognize a repeat count, and other, e.g.,
	  SVr3 repeat the last command in the register contents.  elvis does
	  the former, nvi does the latter, and vim repeats the entire string.
	  It's fortunate that the simpler implementation is more useful
	  (requested by Ed Henderson).
	+ modify vilefilt.l to recognize .vilemenu syntax.
	+ modify menu.c to allow double-quote as comment-marker.
	+ remove full-line behavior from goto-char command.
	+ correct behavior of "Clear Highlighting (below)" menu entry in sample
	  vilemenu.rc which did not clear the final line of a buffer (sorry - I
	  misplaced the original report).
	+ add some pointer checks to swbuffer(), getcol() and gocol(), so
	  piping to vile works properly when trying to initialize window's
	  traits.
	+ add a note about set-window to vile.hlp
	+ improve coloring of literals in vilefilt.l by interpreting strings
	  beginning with ^A, ^X or escape.
	+ modify c-filt.c show nested-comment as error.
	+ fix c-filt.c to highlight properly a number immediately after a
	  leading "#", to accommodate non-standard usage by GCC's preprocessor.

 (kev) 991214 (f)
	+ buffer.c (chg_buff, unchg_buff): Set the "recently changed"
	  flag for syntax coloring purposes.
	+ edef.h (autocolorhook): Declare.
	+ macros/vileinit.rc: Added example code for automatic syntax
	  coloring.
	+ main.c (global_val_init): Initialize VAL_AUTOCOLOR.
	+ modetbl (AUTOCOLOR): New mode.
	  (autocolor-hook): New hook.
	+ perl/shell.pl: Revised to use IO:Pty instead of Comm.pl (which
	  seems to be no longer maintained).
	+ proto.h (autocolor, ttwatchfd, ttunwatchfd): New declarations.
	+ random.c (run_a_hook): Return status from running the command
	  instead of unconditionally returning TRUE.
	  (autocolor): New function.
	+ statevar.c (var_AUTOCOLORHOOK): New function.
	+ tcap.c (term): Use ttwatchfd and ttunwatchfd instead of the
	  nullterm versions.
	+ termio.c (USE_SELECT): New alternative to USE_FCNTL and
	  USE_FIONREAD.  Preferred over both of these methods for
	  determining if there are new characters to be read from
	  the keyboard.
	  (watchfd_read_fds, watchfd_write_fds, watchfd_maxfd): New
	  static variables.
	  (ttwatchfd, ttunwatchfd): New functions.
	  (ttgetc): Added new USE_SELECT code for reading a character.
	  This new code also watches for activity on file descriptors
	  registered with watchfd() and will invoke the automatic
	  syntax coloring function, autocolor, as appropriate.
	+ vile.hlp: Documented new autocolor mechanism.
	+ x11.c (x_start_autocolor_timer, x_autocolor_timeout,
	  x_stop_autocolor_timer): New functions.
	  (x_getc): Call x_start_autocolor_timer and x_stop_autocolor_timer
	  as appropriate.
	  (x_key_press): Call x_start_autocolor_timer to reset the timer
	  on each keystroke.
	> patches by Tom Dickey:
	+ color continued comment-lines in makemode.
	+ correct c-filt.c parsing of numbers such as 0.0, from 9.0e rewrite.
	+ correct display of termcap numbers, which were highlighted as errors
	  after allowing '#' in capability-names.

 (tom) 991212 (e)
	+ improve c-filt.c's parsing of numbers to flag spuriously-repeated
	  suffixes as errors (request by Kevin Buettner).
	+ indent'd word.c, add a special case to avoid putting two spaces after
	  "i.e." or "e.g." to accommodate some European usage.
	+ add several perl5 keywords to perl.key (listed by <abigail@delanet.com>)
	+ remove "unsetl view" logic from :f command, since it is an obscure
	  and not desirable side-effect.  Appeared in filename() and
	  commdlg_save_file() (reported by Clark Morgan).
	+ modify HighlightFilter to check if user is trying to run this with
	  winvile w/o w32pipes set.  That combination does not work, so don't
	  try it.
	+ update CF_ANSI_CC_CHECK to match that in tin, which now uses -Ae
	  option for HPUX (patch by Urs Jansen).
	+ modify config.sub to recognize ia64 machine (patch by Kevin Buettner).
	+ allow '_' and '.' in terminfo aliases.
	+ correct a file-descriptor leak in npflush for win32, which showed up
	  as undeleted temp-files.  This would happen when opening read/write
	  pipes, e.g., for syntax filtering, when now32pipe was specified.
	+ remove obsolete/unused Win31 ifdef's (reported by Clark Morgan).
	> patch by Clark Morgan:
	+ changed the VMS build document (README.VMS) to specify exclusive use
	  of vmsbuild.com rather than MMS directly.
	+ changed vmsbuild.com to accept a compiler specification on the
	  command line, which is much more convenient than editing the build
	  script by hand.  compiler defaults to VAXC on Vax hosts and DECC on
	  Alpha hosts.

 (tom) 991209 (d)
	+ implement "before" and "after" qualifiers for majormodes.
	+ add C++ majormode cppmode,
	+ change prompt for majormode in procedure parameter lists to allow
	  mixed case.
	+ add ".table" and ".default" to filter interpreter.
	+ add a syntax filter for vile's .key files, use that to fix some
	  errors in make.key, tcl.key .
	+ add a syntax filter for Lynx config file.
	+ add '_' to URL patterns, used in txt and mail filters.
	+ corrected DSTRINGS definition in awk syntax filter, which did not
	  handle quoted backslash.
	+ allow '+' in alias in termcap syntax filter.
	+ add variable $error-buffer, use this in manpage.rc to avoid losing
	  the setting when creating a manpage buffer.
	+ add error-patterns for ncurses tic and atac.
	+ implement ".merge" in filter keyword files, needed for C and HTML
	  filters.
	+ improve C syntax filter:
	  + marking misspelled preprocessor keywords as an error.
	  + marking numbers run-on to names as an error,
	  + marking unexpected escapes as an error,
	+ minor fixes of ifdef's for glob_match_leaf(), for building with
	  configure --disable-extensions.
	> patches by Clark Morgan:
	+ add the Win32 common dialog "save as" feature to both console
	  vile and winvile.
	+ update vile.hlp was updated to reflect recent
	  questions about macros.doc
	+ split-out the win32 command-specific code (e.g., winopen, winsave,
	  etc) from w32misc.c to a new file called w32cmd.c
	+ add a note about obscure "unsetl view" side-effect of the :f command
	+ add special case to expand_wild_args() for VMS to handle +/string
	  syntax.
	+ update README.VMS for building xvile
	+ fix for VAXC to include icons/vile.xbm

 (tom) 991202 (c)
	+ modified vmsbuild.com and descrip.mms (untested) to build the Motif
	  version with menus, the X toolkit version without (based on discussion
	  with Clark Morgan and Jonathan Ridler).
	+ fix ttclean() function for xvile on VMS (Clark Morgan, from problem
	  report by Jonathan Ridler <JONATHAN@rubens.its.unimelb.edu.au>).
	+ add .Xdefaults to xresmode.
	+ add backslashes as needed to digraph.rc, to work with the new single
	  quote interpretation (reported by Paul Fox).
	+ correct a place where expression evaluation result was overwritten
	  with the nested result in a complex expression from 8.3d (reported
	  by George Eccles).
	+ highlight whitespace in makefiles between backspace and newline as
	  an error.
	+ define "Error" class for syntax filters.
	+ correct make filter's handling of escaped newline: '.' does not match
	  newline.

 (tom) 991127 (b)
	+ add "case" and "do" groups to m4mode.
	+ add ".ms" and ".me" suffixes for nrmode.
	+ add ``quote'' quoting to txt filter.
	+ refine treatment of double-quote in txt filter so it can be quoted
	  by single-quote or parenthesis.
	+ allow "~" in URL patterns for txt and mail filters, omitted in 9.0a.
	+ correct some missing backslashes before vertical bar and parentheses
	  in filters.rc, made apparent by the change to use single-quoted
	  strings.
	+ restore handling of special control characters such as ^D, ^T in
	  insert mode which happened to be GOAL or MOTION commands (reported by
	  Clark Morgan).

 (tom) 991124 (a)
	+ add single-quoted strings, which eliminate the need for escaping
	  backslash (suggested by Paul Fox).
	+ modify logic in ins_any_time() to interpret control characters which
	  are bound to GOAL or MOTION commands rather than inserting them
	  without quoting.  This allows ^E and ^Y as commands within an insert
	  (request by Quang Ngo <quang@usa.net>).
	+ change several commands to use GOAL flag, which tells vile that they
	  may move to a new line, but try to keep the column constant.  Doing
	  this has the side-effect that they are usable in quoted-motion:
	  grow-window, move-next-window-down, move-next-window-up,
	  position-window (z), redraw-display, scroll-next-window-down,
	  scroll-next-window-up and shrink-window, as well as api_motion().
	+ modify quoted-motion so that commands with the GOAL flag are allowed,
	  since those do not change the buffer contents.
	+ change handling of status return from readpattern() so that an abort
	  is passed up to the caller.  In execute-named-procedure, check for
	  abort, and restore DOT to the value before evaluating addresses
	  (reported by Clark Morgan).
	+ correct bug in wrapmargin/fillcol logic which did not split a line
	  when a newline was inserted into a string containing no blanks
	  after the fillcol position.  Instead, an empty line was inserted
	  (reported by Clark Morgan).
	+ correct missing allocation of default help-string for user-defined
	  procedures, which could cause core dump if a procedure were redefined,
	  e.g., by source'ing .vilerc (reported by Paul Fox).
	+ add tags syntax filter and majormode tagsmode.
	+ add X resource syntax filter and majormode xresmode.
	+ improve URL pattern in mail and txt filters, to allow it to match
	  ftp and other URL types, as well as limited the pattern to avoid
	  picking up things like trailing '>' characters.
	+ correct some syntax filters' expressions for REAL, which were
	  expecting two digits after the decimal point, rather one.
	> patches by Clark Morgan:
	+ enable "kill-buffer <wildcard-expr>" on VMS.
	+ fix to allow accessing multiple versions of DECNET-based files.
	  That is, this now works:
		$ vile node::dir:log.txt;*       <- open all copies of log.txt
	+ eliminate stray cursor glyphs in the message buffer (most often
	  happens when a Win32 dialog is dismissed at the "same time" that a
	  winvile command writes status text).

This change log started on Friday Nov 19, 1999.
