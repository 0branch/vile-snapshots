: $Id: hs.key,v 1.1 2008/08/31 13:40:58 tom Exp $
: Haskell keywords
as
case
class
data
default
deriving
do
else
hiding
if
import
in
infix
infixl
infixr
instance
let
module
newtype
of
qualified
then
type
where
:
.default Number
True
False
:
.default Type
Addr
Array
Bool
Char
Double
Float
IO
Int
Integer
String
Void
.default
:
Complex
Either
ExitCode
IOError
IOResult
Maybe
Ordering
Ratio
:
Nothing:Number
:
ExitSuccess
:
GT
LT
EQ
:
undefined
error
trace
