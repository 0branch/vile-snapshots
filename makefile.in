# makefile.in is the makefile template for vile on unix systems.
# makefile is generated from makefile.in by running configure.
#
# If you edit makefile, your changes will be lost when you run configure
# again.  See the file INSTALL from instructions on how to configure, make,
# and install vile/xvile.
#
# The command/name/key/function bindings are defined in the file "cmdtbl".
# The mktbls program parses this to produce nebind.h, nename.h, neproto.h and
# nefunc.h, which are used by the rest of the build.
#
# Buffer/window modes are defined in the file "modetbl".
# The mktbls program parses this to produce nemode.h, which is included in
# 'estruct.h'.
#
# The version number is found near the top of edef.h, and is displayed with
# the ":version" command, or by invoking vile with "-V".
#
# Paul Fox
#
# gnu autoconf support by kevin buettner, 5/94
#
# $Header: /users/source/archives/vile.vcs/RCS/makefile.in,v 1.169 2000/06/18 17:58:37 tom Exp $
#

#### Start of system configuration section. ####

srcdir = @srcdir@
srcdir_sl = @srcdir@/
VPATH  = @srcdir@

CC		= @CC@
CPP		= @CPP@
LINK		= @LINK_PREFIX@ $(CC) $(CFLAGS)
INSTALL		= @INSTALL@
INSTALL_PROGRAM	= @INSTALL_PROGRAM@
INSTALL_DATA	= @INSTALL_DATA@

EXTRA_CFLAGS	= @EXTRA_CFLAGS@
CFLAGS		= @CFLAGS@ $(EXTRA_CFLAGS)
LIBS		= @FILTER_LIBS@ @LIBS@
LINT		= @LINT@

x		= @PROG_EXT@

X_LIBS		= @X_LIBS@

SCREEN		= @SCREEN@
TARGET		= @TARGET@$x

AWK		= @AWK@
PERL		= @PERL@
PERLLIB		= @perl_lib_path@
INSTALL_SCRIPT	= $(srcdir)/sinstall.sh $(PERL) $(INSTALL_PROGRAM)
INSTALL_MODULE	= $(srcdir)/sinstall.sh $(PERL) $(INSTALL_DATA)


prefix		= @prefix@
exec_prefix	= @exec_prefix@

manext		= 1
libdir		= @libdir@
bindir		= @bindir@
datadir		= @datadir@/vile
perldir		= $(datadir)/perl
mandir		= @mandir@/man$(manext)

#### End of system configuration section. ####

SHELL		= /bin/sh
RM		= rm -f

ICON		= vile
ICON_SUFFIX	= @ICON_SUFFIX@
QUOTDEFS	= \
		-DVILE_ICON=\"icons/$(ICON)$(ICON_SUFFIX)\" \
		-DVILE_LIBDIR_PATH=\"'@VILE_LIBDIR_PATH@'\" \
		-DVILE_STARTUP_PATH=\"'@VILE_STARTUP_PATH@'\"
CPPFLAGS	= -I. -I$(srcdir) \
		-DHAVE_CONFIG_H @CPPFLAGS@

LDFLAGS		= @IMAKE_LOADFLAGS@ @LDFLAGS@

DESTDIR		=
BINDIR		= $(DESTDIR)$(bindir)
DATADIR		= $(DESTDIR)$(datadir)
PERLDIR		= $(DESTDIR)$(perldir)
MANDIR		= $(DESTDIR)$(mandir)

INSTALL_DIRS    = $(BINDIR) $(DATADIR) $(MANDIR) @EXTRA_INSTALL_DIRS@

.SUFFIXES: .c .i .o

.c.i:
@RULE_CC@
	@ECHO_CC@$(CPP) -C $(CPPFLAGS) $(QUOTDEFS) $< >$@
.c.o:
@RULE_CC@
	@ECHO_CC@$(CC) -c $(CPPFLAGS) $(QUOTDEFS) $(CFLAGS) -DHELP_LOC=\"$(datadir)\" $<

# All of the makefiles which should be preserved and distributed
UNIXMAKIN = makefile.in				# for use with configure
VMSMAK =   descrip.mms vmsbuild.com		# on VMS
TURBOMAK = makefile.tbc				# on DOS or OS/2, TURBO C or Borland C
WATMAK =   makefile.wat				# on DOS, using Watcom C/386
MSCMAK =	# still waiting for this one	# on DOS, using Microsoft C
DJGPPMAK = makefile.djg				# on DOS, DJGCC v1.09
NTMAK = makefile.wnt				# on Windows/NT
BCCNTMAK = makefile.blc				# Borland C on Windows/NT
OS2MAK = makefile.icc				# OS/2, (IBM C Set ++ 2.x)
EMXMAK = makefile.emx config.emx		# OS/2, (EMX with gcc)

MAKFILES = \
	$(UNIXMAKIN) \
	$(VMSMAK) \
	$(TURBOMAK) \
	$(WATMAK) \
	$(DJGPPMAK) \
	$(MSCMAK) \
	$(BORMAK) \
	$(NTMAK) \
	$(BCCNTMAK) \
	$(OS2MAK) \
	$(EMXMAK)

ALLTOOLS = $(MAKFILES) mktbls.c cmdtbl modetbl \
	configure config_h.in \
	install.sh mkdirs.sh \
	configure.in aclocal.m4

# these are normal editable headers
HDRS = \
	api.h \
	btree.h \
	chgdfunc.h \
	dirstuff.h \
	edef.h \
	estruct.h \
	os2keys.h \
	proto.h \
	pscreen.h \
	tcap.h \
	trace.h

SCREENS = \
	ansi.c \
	borland.c \
	ibmpc.c \
	ntconio.c \
	ntwinio.c \
	os2vio.c \
	tcap.c \
	vmsvt.c \
	x11.c

# other source code, some used in other makefiles, some useful tools,
#  some possibly obsolete
PERL_SRC = \
	$(srcdir)/perl/Glob2re.pm \
	$(srcdir)/perl/Vile.pm \
	$(srcdir)/perl/Vile/Exporter.pm \
	$(srcdir)/perl/Vile/Manual.pm \
	$(srcdir)/perl/Vileserv.pm \
	$(srcdir)/perl/Visit.pm \
	$(srcdir)/perl/capture.pm \
	$(srcdir)/perl/directory.pm \
	$(srcdir)/perl/dirlist.pm \
	$(srcdir)/perl/gdb.pm \
	$(srcdir)/perl/hgrep.pm \
	$(srcdir)/perl/lock.pm \
	$(srcdir)/perl/mime.pl \
	$(srcdir)/perl/plugins.pl \
	$(srcdir)/perl/search.pm \
	$(srcdir)/perl/shell.pm \
	$(srcdir)/perl/spell.pm \
	$(srcdir)/perl/vileget \
	$(srcdir)/perl/winops.pm


MACRO_SRC = \
	$(srcdir)/macros/color-ls.rc \
	$(srcdir)/macros/digraphs.rc \
	$(srcdir)/macros/manpage.rc \
	$(srcdir)/macros/palettes.rc \
	$(srcdir)/macros/pictmode.rc \
	$(srcdir)/macros/shifts.rc \
	$(srcdir)/macros/vileinit.rc \
	$(srcdir)/macros/vileperl.rc

OTHERSRC = \
	djhandl.c \
	gppconio.c \
	os2pipe.c \
	vms2unix.c \
	vmspipe.c

# documentation, such as it is
DOCS =	\
	doc/config.doc \
	doc/hilite.doc \
	doc/macros.doc \
	doc/menus.doc \
	doc/modes.doc \
	doc/oleauto.doc \
	doc/perl.doc \
	doc/visvile.doc \
	doc/w32modes.doc \
	vile.1 \
	vile.hlp

# miscellaneous text files
TEXTFILES = README README.PC \
	INSTALL CHANGES \
	CHANGES.R7 CHANGES.R6 CHANGES.R5 CHANGES.R4 CHANGES.R3 \
	buglist revlist patchlev.h COPYING

VILESRC = main.c api.c basic.c bind.c btree.c buffer.c csrch.c \
	display.c dumbterm.c eval.c exec.c externs.c fences.c file.c \
	filec.c fileio.c finderr.c glob.c globals.c \
	history.c input.c insert.c isearch.c itbuff.c lckfiles.c line.c map.c \
	modes.c msgs.c npopen.c oneliner.c opers.c path.c random.c \
	regexp.c region.c search.c select.c spawn.c statevar.c tags.c \
	tbuff.c termio.c ucrypt.c undo.c version.c \
	watch.c window.c word.c wordmov.c

ALLSRC = $(VILESRC) $(SCREENS) $(OTHERSRC) $(HDRS)

# this is for work-in-progress files being shared among developers
#  which don't need to go into general releases yet.
DEVELOPER_ONLY = NOTES.X11 empty.rc mktbls.bat \
	trace.c trace.h \
	fakevms.c fakevms.h

# these are the files that go to everyone
DISTFILES = $(ALLTOOLS) $(ALLSRC) $(DOCS) $(TEXTFILES)

# these are the files that go to coders
DEV_DISTFILES = $(DISTFILES) $(DEVELOPER_ONLY)

SRC = $(SCREEN).c $(VILESRC)

MKTBLS = ./mktbls$x

# these headers are built by the mktbls program from the information in cmdtbl
# and in modetbl
BUILTHDRS = nebind.h neproto.h neexec.h nefunc.h nemode.h nename.h nevars.h nefkeys.h nefsms.h

# built from perl.xs
BUILTSRCS = perl.c

# built-in filters, if any
BUILTLIBS = @BUILTLIBS@

# The following are optional (non-core):
#	api.o
#	btree.o
#	builtflt.o
#	history.o
#	isearch.o
#	npopen.o
#	select.o
#	spawn.o
#	statevar.o
#	ucrypt.o
OBJ = $(SCREEN).o \
	main.o basic.o bind.o buffer.o csrch.o \
	display.o dumbterm.o eval.o exec.o externs.o fences.o file.o \
	filec.o fileio.o finderr.o glob.o globals.o \
	input.o insert.o itbuff.o lckfiles.o line.o map.o \
	modes.o msgs.o oneliner.o opers.o path.o random.o \
	regexp.o region.o search.o tags.o \
	tbuff.o termio.o undo.o version.o \
	watch.o window.o word.o wordmov.o @EXTRAOBJS@

ALL =	$(TARGET)

all \
install ::
	cd filters && $(MAKE) @cf_cv_makeflags@ $@
all ::	$(ALL)

filters/libvlflt.a :
	cd filters && $(MAKE) @cf_cv_makeflags@ libvlflt.a

$(TARGET): $(BUILTHDRS) $(OBJ) $(BUILTLIBS)
	- mv $(TARGET) o$(TARGET)
	@ECHO_LD@$(LINK) $(LDFLAGS) -o $@ $(OBJ) $(X_LIBS) $(LIBS)

vile.man: vile.1
	nroff -man vile.1 | col -b >vile.man

vile-perl-api.pod: perl.xs
	perl -lne 'print if s/^\s{1,2}#\s{0,1}//' $(srcdir)/perl.xs > $@

vile-perl-api.doc: vile-perl-api.pod
	pod2text vile-perl-api.pod > $@

vile-perl-api.html: vile-perl-api.pod
	pod2html vile-perl-api.pod > $@

vile-perl-api.man: vile-perl-api.pod
	pod2man vile-perl-api.pod > $@

nebind.h \
nefkeys.h \
neexec.h \
nefunc.h \
neproto.h :	nename.h

nename.h :	cmdtbl $(MKTBLS)
	$(MKTBLS) $(srcdir)/cmdtbl

nefsms.h \
nevars.h :	nemode.h

nemode.h:	modetbl $(MKTBLS)
	$(MKTBLS) $(srcdir)/modetbl

builtflt.o :	builtflt.h

builtflt.h :
	$(AWK) -f $(srcdir)/filters/mk-0th.awk <$(srcdir)/filters/genmake.mak list="@VILE_BUILTIN_FILTERS@" >$@

$(MKTBLS):  $(srcdir)/mktbls.c
	@ECHO_LD@$(CC) $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) \
	    -o $(MKTBLS)  $(srcdir)/mktbls.c

check: $(TARGET)
	@echo Sorry, no batch tests available.

INSTALL_MACRO_FILES = \
	$(DATADIR)/color-ls.rc \
	$(DATADIR)/digraphs.rc \
	$(DATADIR)/manpage.rc \
	$(DATADIR)/palettes.rc \
	$(DATADIR)/pictmode.rc \
	$(DATADIR)/shifts.rc \
	$(DATADIR)/vileinit.rc \
	$(DATADIR)/vileperl.rc

INSTALL_PERL_DIRS = $(PERLDIR) $(PERLDIR)/Vile
INSTALL_PERL_FILES = \
	$(BINDIR)/vileget \
	$(PERLDIR)/Glob2re.pm \
	$(PERLDIR)/Vile.pm \
	$(PERLDIR)/Vile/Exporter.pm \
	$(PERLDIR)/Vile/Manual.pm \
	$(PERLDIR)/Vileserv.pm \
	$(PERLDIR)/Visit.pm \
	$(PERLDIR)/capture.pm \
	$(PERLDIR)/directory.pm \
	$(PERLDIR)/dirlist.pm \
	$(PERLDIR)/gdb.pm \
	$(PERLDIR)/hgrep.pm \
	$(PERLDIR)/lock.pm \
	$(PERLDIR)/mime.pl \
	$(PERLDIR)/plugins.pl \
	$(PERLDIR)/search.pm \
	$(PERLDIR)/shell.pm \
	$(PERLDIR)/spell.pm \
	$(PERLDIR)/winops.pm


INSTALL_X_FILES = \
	$(BINDIR)/xshell.sh \
	$(DATADIR)/.vilemenu

INSTALL_FILES = \
	$(BINDIR)/$(TARGET) \
	$(BINDIR)/@TARGET@-pager \
	$(MANDIR)/@TARGET@.$(manext) \
	$(INSTALL_MACRO_FILES) \
	$(DATADIR)/vile.hlp @EXTRA_INSTALL_FILES@

install-$(TARGET) \
install :: $(INSTALL_DIRS) \
	$(INSTALL_FILES)
	@echo 'Completed installation.'

install-perl : $(INSTALL_PERL_DIRS) $(INSTALL_PERL_FILES)

installdirs: $(INSTALL_DIRS)

uninstall-$(TARGET) \
uninstall ::
	- $(RM) $(INSTALL_FILES)

# The makefile is technically dependent upon the config.status file, but
# gmake gets overly ambitious and remakes the makefile too often.
makefile: makefile.in
	if test ! -f config.status; then $(SHELL) ./configure; fi
	$(SHELL) ./config.status

# defining this target, though technically (i think) correct, causes
#  the make to fail on machines which don't have autoconf, i.e. most of them.
#configure: configure.in aclocal.m4
#	autoconf

config.status: configure
	$(SHELL) ./config.status --recheck

uninstall \
mostlyclean \
clean \
distclean ::
	- test -f filters/makefile && cd filters && $(MAKE) @cf_cv_makeflags@ $@

mostlyclean ::
	- $(RM) *.[oi] o$(TARGET) $(BUILTHDRS) $(BUILTSRCS) $(MKTBLS) \
	    builtflt.h core *~ *.BAK *.bb* *.da *.gcov

clean :: mostlyclean
	- $(RM) $(ALL)

distclean :: clean
	- $(RM) makefile config.status config.cache config.log config.h
	- test -d filters && rmdir filters

realclean: distclean
	- $(RM) tags TAGS vile-perl-api.* pod2html-*

lint: $(BUILTHDRS)
	$(LINT) $(CPPFLAGS) $(SRC) $(LIBS)
	$(LINT) $(CPPFLAGS) mktbls.c

tags:
	ctags $(SRC) $(HDRS)

TAGS:
	etags $(SRC) $(HDRS)

dotags:
	dotags $(SRC) $(HDRS)

#	 this builds vile-N.Ndev.tar.gz, including all development files
devtarball:	$(DEV_DISTFILES) /tmp/vilevers release_warnings
	echo vile-`cat /tmp/vilevers` > .fname
	rm -rf `cat .fname`
	mkdir `cat .fname`
	SRCDIR=. ;\
	test $(srcdir) = "\@srcdir\@" && SRCDIR=$(srcdir) ;\
	for file in $(DEV_DISTFILES); do \
	  ln $$SRCDIR/$$file `cat .fname` \
	    || { echo copying $$file instead; cp -p $$file `cat .fname`; }; \
	done
#	tar -cf - `cat .fname` | gzip >`cat .fname`dev.tar.gz
	gtar -czf `cat .fname`dev.tar.gz `cat .fname`
	@echo Created `cat .fname`dev.tar.gz
	rm -rf `cat .fname` .fname

#	 this builds vile-N.N.tar.gz, for general release
tarball:	$(DISTFILES) /tmp/vilevers release_warnings
	echo vile-`cat /tmp/vilevers` > .fname
	rm -rf `cat .fname`
	mkdir `cat .fname`
	SRCDIR=. ;\
	test $(srcdir) = "\@srcdir\@" && SRCDIR=$(srcdir) ;\
	for file in $(DISTFILES); do \
	  ln $$SRCDIR/$$file `cat .fname` \
	    || { echo copying $$file instead; cp -p $$file `cat .fname`; }; \
	done
	gtar -czf `cat .fname`.tar.gz `cat .fname`
	@echo Created `cat .fname`.tar.gz
	rm -rf `cat .fname` .fname

#	 this builds vileN.Nshar, for general release
bigsharball: $(DISTFILES) /tmp/vilevers release_warnings
	vilevers=`cat /tmp/vilevers`; \
	shar -spgf@foxharp.boston.ma.us -nvile$${vilevers} \
	    -o vile$${vilevers}shar README `ls $(DISTFILES) | \
	    sed '/^README$$/d'` ; \
	mv vile$${vilevers}shar.01 vile$${vilevers}shar	; \
	echo Created vile$${vilevers}shar


# shar args: add -a for archive headers, add -s pgf@site.net for "submitted-by"
multisharball: $(DISTFILES) /tmp/vilevers
	[ -d shardir ] || mkdir shardir
	vilevers=`cat /tmp/vilevers`; \
	shar -x -a -spgf@foxharp.boston.ma.us -nvile$${vilevers} -L60 \
			-o shardir/vileshar `ls $(DISTFILES)`

multicsharball: $(DISTFILES) /tmp/vilevers
	[ -d cshardir ] || mkdir cshardir
	vilevers=`cat /tmp/vilevers`; \
	shar -p -nvile$${vilevers} -L60 -o cshardir/vileshar \
		-C `ls $(DISTFILES)`

zipfile: $(DISTFILES) /tmp/vilevers
	vilevers=`cat /tmp/vilevers | sed 's/\.//'`; \
	zip -k vile$${vilevers}s.zip $(DISTFILES) ;\
	echo Created vile$${vilevers}s.zip

# DOS builds...
DOSBINARIES = README README.PC vile.hlp vile.exe

binzip_djg: $(DOSBINARIES) go32.exe /tmp/vilevers
	vilevers=`cat /tmp/vilevers | sed 's/\.//'`; \
	zip -k vile$${vilevers}b.zip $(DOSBINARIES) go32.exe ;\
	echo Created vile$${vilevers}b.zip

binzip_wat: $(DOSBINARIES) dos4gw.exe /tmp/vilevers
	vilevers=`cat /tmp/vilevers | sed 's/\.//'`; \
	zip -k vile$${vilevers}b.zip $(DOSBINARIES) dos4gw.exe ;\
	echo Created vile$${vilevers}b.zip

patch:	/tmp/vilevers
	@orevlistrev=`rlog -h revlist | egrep head: | cut -f2 -d'.'`	;\
	orevlistrev=1.`expr $$orevlistrev - 1`				;\
	ovilevers=`cat /tmp/vilevers | cut -f2 -d'.'`			;\
	ovilemajor=`cat /tmp/vilevers | cut -f1 -d'.'`			;\
	ovilevers=$$ovilemajor.`expr $$ovilevers - 1`			;\
	echo Previous version is $$ovilevers				;\
	vilevers=`cat /tmp/vilevers`					;\
	co -p$$orevlistrev revlist |					 \
	while read file filerev						;\
	do								 \
	  rcsdiff -c -u -r$$filerev $$file 2>/dev/null || true		;\
	done  >patch$$ovilevers-$$vilevers				;\
	echo Created patch$$ovilevers-$$vilevers

dpatch:
	co -p$(PATCH_AGAINST) revlist |					 \
	while read file filerev						;\
	do								 \
	  rcsdiff -c -u -r$$filerev $$file 2>/dev/null || true		;\
	done  >patchREL-CUR						;\
	echo Created patchREL-CUR

/tmp/vilevers: ALWAYS
	@expr "`egrep 'version\[\].*' edef.h`" : \
		'.* \([0-9][0-9]*\.[0-9].*\)".*' >/tmp/vilevers
	@echo Current version is `cat /tmp/vilevers`

release_warnings:
	@echo
	@echo 'Do you need to rebuild the revlist????  top comment is:'
	@rlog revlist | sed -n -e '/date/,/---------/p' | \
		sed -n '/date\|------------/!p' | sed -e 's/^/	/' -e 1q
	@echo 'or maybe date the CHANGES file?  it says:'
	@sed -n -e '/Changes/s/^/	/p' -e '2q' CHANGES
	@echo 'or maybe update the version info in edef.h?  it contains:'
	@sed -n -e '/.*decl_init.*version.*,/s//	/p' edef.h
	@echo 'how about the README?  it contains:'
	@sed -n -e '/version/s/^/	/p' -e '3q' README
	@echo 'or in vile.hlp?  it has:'
	@sed -n -e '/.*Getting along with vile	*/s//	/p' -e '5q' vile.hlp
	@echo 'or in vmsbuild.com?  it has:'
	@sed -n -e '/Identification=/s/^.*Vile \([^"]*\)["]*/	\1/p' vmsbuild.com
	@echo 'did you reset patchlev.h?'
	@sed -n -e 's/^/	/' -e '/PATCH/p' patchlev.h
	@echo 'did you update/rename the RPM spec?'
	@ls -1 vile*.spec | sed -e 's/^/	/'
	@echo -n "Hit return to continue..."
	@read a

rcsdiffrw:
	@-for x in `$(MAKE) -f makefile.in rw`	;\
	do	\
		echo		;\
		echo $$x	;\
		echo =========	;\
		rcsdiff -u $$x	;\
	done 2>&1		;\
	echo			;\
	echo all done

# dump a list of the important files
list:
	@ls $(DEV_DISTFILES)

devonlylist:
	@ls $(DEVELOPER_ONLY)

# make a list of RCS revisions.  don't include the revlist itself
nrevlist:
	for f in `$(MAKE) -f makefile.in list  | egrep -v revlist`	;\
	do								\
		rev=`rlog -h $$f | egrep head: | cut -f2 -d' '`		;\
		echo "$$f	$$rev"					;\
	done >/tmp/vile_revlist
	mv /tmp/vile_revlist nrevlist

# dump a list of files that may have changed since last backup
rw:
	@ls -l $(DEV_DISTFILES) |\
		egrep '^[^l].w' | \
		sed 's;.* ;;'   # strip to last space

populate:
	for file in $(DEV_DISTFILES); do \
	test -f $$file || co $$file ;\
	done

perl.c: $(srcdir)/perl.xs $(srcdir)/ptypemap
	$(PERL) $(PERLLIB)/ExtUtils/xsubpp \
		-typemap $(PERLLIB)/ExtUtils/typemap \
		-typemap ptypemap \
		$(srcdir)/perl.xs > $@

$(OBJ): estruct.h nemode.h edef.h neproto.h proto.h config.h

api.o:		api.h
bind.o:		nefunc.h btree.h
btree.o:	btree.h
eval.o:		nevars.h
exec.o:		neexec.h nefunc.h
externs.o:	nebind.h nename.h neproto.h nefunc.h
filec.o:	dirstuff.h
glob.o:		dirstuff.h
globals.o:	nefunc.h
main.o:		chgdfunc.h nevars.h
modes.o:	chgdfunc.h nefsms.h
opers.o:	nefunc.h
path.o:		dirstuff.h
perl.o:		api.h
random.o:	nefunc.h
select.o:	nefunc.h
statevar.o:	nevars.h
spawn.o:	nefunc.h
tags.o:		btree.h
tcap.o:		tcap.h
termio.o:	nefunc.h
version.o:	patchlev.h
word.o:		nefunc.h
x11.o:		nefunc.h

# dependency-rules for install/installdirs
$(BINDIR)/$(TARGET):		$(TARGET)
	$(INSTALL_PROGRAM)	$(TARGET) $@

$(BINDIR)/xshell.sh:		$(srcdir)/xshell.sh
	$(INSTALL_PROGRAM)	$(srcdir)/xshell.sh $@
$(BINDIR)/vileget:		$(srcdir)/perl/vileget
	$(INSTALL_SCRIPT)	$(srcdir)/perl/vileget $@

$(BINDIR)/@TARGET@-pager:	$(srcdir)/macros/vile-pager
	sed -e 's/ vile / @TARGET@ /' $(srcdir)/macros/vile-pager >$@
	chmod 755 $@

$(DATADIR)/color-ls.rc:		$(srcdir)/macros/color-ls.rc
	$(INSTALL_DATA)		$(srcdir)/macros/color-ls.rc $@
$(DATADIR)/digraphs.rc:		$(srcdir)/macros/digraphs.rc
	$(INSTALL_DATA)		$(srcdir)/macros/digraphs.rc $@
$(DATADIR)/manpage.rc:		$(srcdir)/macros/manpage.rc
	$(INSTALL_DATA)		$(srcdir)/macros/manpage.rc $@
$(DATADIR)/palettes.rc:		$(srcdir)/macros/palettes.rc
	$(INSTALL_DATA)		$(srcdir)/macros/palettes.rc $@
$(DATADIR)/pictmode.rc:		$(srcdir)/macros/pictmode.rc
	$(INSTALL_DATA)		$(srcdir)/macros/pictmode.rc $@
$(DATADIR)/shifts.rc:		$(srcdir)/macros/shifts.rc
	$(INSTALL_DATA)		$(srcdir)/macros/shifts.rc $@
$(DATADIR)/vileinit.rc:		$(srcdir)/macros/vileinit.rc
	$(INSTALL_DATA)		$(srcdir)/macros/vileinit.rc $@
$(DATADIR)/vileperl.rc:		$(srcdir)/macros/vileperl.rc
	$(INSTALL_DATA)		$(srcdir)/macros/vileperl.rc $@

$(DATADIR)/.vilemenu:		$(srcdir)/macros/vilemenu.rc
	$(INSTALL_DATA)		$(srcdir)/macros/vilemenu.rc $@

$(DATADIR)/vile.hlp:		$(srcdir)/vile.hlp
	$(INSTALL_DATA)		$(srcdir)/vile.hlp $@

$(MANDIR)/vile.$(manext):	$(srcdir)/vile.1
	$(INSTALL_DATA)		$(srcdir)/vile.1 $@
$(MANDIR)/xvile.$(manext):	$(srcdir)/vile.1
	$(INSTALL_DATA)		$(srcdir)/vile.1 $@

$(PERLDIR)/Glob2re.pm:		$(srcdir)/perl/Glob2re.pm
	$(INSTALL_DATA)		$(srcdir)/perl/Glob2re.pm $@
$(PERLDIR)/Vile.pm:		$(srcdir)/perl/Vile.pm
	$(INSTALL_DATA)		$(srcdir)/perl/Vile.pm $@
$(PERLDIR)/Vile/Exporter.pm:	$(srcdir)/perl/Vile/Exporter.pm
	$(INSTALL_DATA)		$(srcdir)/perl/Vile/Exporter.pm $@
$(PERLDIR)/Vile/Manual.pm:	$(srcdir)/perl/Vile/Manual.pm
	$(INSTALL_DATA)		$(srcdir)/perl/Vile/Manual.pm $@
$(PERLDIR)/Vileserv.pm:		$(srcdir)/perl/Vileserv.pm
	$(INSTALL_MODULE)	$(srcdir)/perl/Vileserv.pm $@
$(PERLDIR)/Visit.pm:		$(srcdir)/perl/Visit.pm
	$(INSTALL_DATA)		$(srcdir)/perl/Visit.pm $@
$(PERLDIR)/capture.pm:		$(srcdir)/perl/capture.pm
	$(INSTALL_DATA)		$(srcdir)/perl/capture.pm $@
$(PERLDIR)/directory.pm:	$(srcdir)/perl/directory.pm
	$(INSTALL_DATA)		$(srcdir)/perl/directory.pm $@
$(PERLDIR)/dirlist.pm:		$(srcdir)/perl/dirlist.pm
	$(INSTALL_DATA)		$(srcdir)/perl/dirlist.pm $@
$(PERLDIR)/gdb.pm:		$(srcdir)/perl/gdb.pm
	$(INSTALL_DATA)		$(srcdir)/perl/gdb.pm $@
$(PERLDIR)/hgrep.pm:		$(srcdir)/perl/hgrep.pm
	$(INSTALL_DATA)		$(srcdir)/perl/hgrep.pm $@
$(PERLDIR)/lock.pm:		$(srcdir)/perl/lock.pm
	$(INSTALL_DATA)		$(srcdir)/perl/lock.pm $@
$(PERLDIR)/mime.pl:		$(srcdir)/perl/mime.pl
	$(INSTALL_DATA)		$(srcdir)/perl/mime.pl $@
$(PERLDIR)/plugins.pl:		$(srcdir)/perl/plugins.pl
	$(INSTALL_DATA)		$(srcdir)/perl/plugins.pl $@
$(PERLDIR)/search.pm:		$(srcdir)/perl/search.pm
	$(INSTALL_DATA)		$(srcdir)/perl/search.pm $@
$(PERLDIR)/shell.pm:		$(srcdir)/perl/shell.pm
	$(INSTALL_DATA)		$(srcdir)/perl/shell.pm $@
$(PERLDIR)/spell.pm:		$(srcdir)/perl/spell.pm
	$(INSTALL_DATA)		$(srcdir)/perl/spell.pm $@
$(PERLDIR)/winops.pm:		$(srcdir)/perl/winops.pm
	$(INSTALL_DATA)		$(srcdir)/perl/winops.pm $@

$(INSTALL_DIRS):
	$(SHELL) ${srcdir}/mkdirs.sh $@

ALWAYS:

depend : $(BUILTHDRS) $(OBJ)
	makedepend $(CPPFLAGS) -- $(CFLAGS) -- `echo $(OBJ) | sed -e 's/\.o/.c/g'`

# DO NOT DELETE THIS LINE -- make depend depends on it.
